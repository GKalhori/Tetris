EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
tetris.exe -- emu8086 assembler version: 4.08  
 
[ 21/04/30  --  11:19:16 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 64
[   3]        :                                       .data
[   4]        :                                       
[   5]        :                                       ; borders coordinate
[   6]    0040: 39 00 8D 00                           brd_ul dw 57, 141
[   7]    0044: 3D 00 B5 00                           brd_ur dw 61, 181
[   8]    0048: 75 00 89 00                           brd_dl dw 117, 137
[   9]    004C: 79 00 B1 00                           brd_dr dw 121, 177
[  10]        :                                       
[  11]        :                                       ; drawing bounds 	
[  12]    0050: 00 00                                 start_col dw ?
[  13]    0052: 00 00                                 end_col dw ?
[  14]    0054: 00 00                                 rst_col dw ?
[  15]    0056: 00 00                                 start_row dw ?
[  16]    0058: 00 00                                 end_row dw ?
[  17]        :                                       
[  18]        :                                       ; shift bounds
[  19]    005A: 8D 00                                 srch_str_col dw 141
[  20]    005C: B1 00                                 srch_end_col dw 177
[  21]        :                                       
[  22]        :                                       ; features of pieces
[  23]    005E: 00                                    curr_shape db ?     ; T, Z, L, S, R
[  24]    005F: 00 00                                 curr_ang dw ?       ; 0, 90, 180, 270
[  25]    0061: 00                                    curr_color db ?
[  26]        :                                       
[  27]        :                                       ; messages
[  28]    0062: 47 41 4D 45 20 4F 56 45 52 24         game_over_msg db 'G','A','M','E',' ','O','V','E','R','$'
[  29]    006C: 53 43 4F 52 45 3A 20 24               score_msg db "SCORE: $"
[  30]    0074: 41 20 2D 20 4C 65 66 74 24 00         left_msg dw "A - Left$"
[  31]    007E: 44 20 2D 20 52 69 67 68 74 24         right_msg dw "D - Right$"
[  32]    0088: 46 20 2D 20 46 61 73 74 24 00         fast_msg dw "F - Fast$"
[  33]    0092: 53 20 2D 20 44 6F 77 6E 24 00         down_msg dw "S - Down$"
[  34]    009C: 57 20 2D 20 52 6F 74 61 74 65 24 00   rotate_msg dw "W - Rotate$"
                                                    
[  35]        :                                       
[  36]        :                                       ; others
[  37]    00A8: 01                                    down_blockd db 1
[  38]    00A9: 00 00                                 score dw 0
[  39]    00AB: 00                                    char db ?
[  40]    00AC: 00 00                                 full_rows_num dw 0
[  41]    00AE: 00 00                                 curr_row dw ?
[  42]    00B0: 0A 00                                 ten dw 10
[  43]        :                                       
[  44]        :                                       ;\--------------------------------------------------------------------------/
[  45]        :                                       ;|                                 Main                                     |
[  46]        :                                       ;/--------------------------------------------------------------------------\
[  47]        :                                       
[  48]        :                                       .code
[  49]        :                                       #start=led_display.exe#
[  50]        :                                       
[  51]    00C0:                                       main proc far
[  52]        :                                       ; set data stack
[  53]    00C0: B8 04 00                              mov ax, @data
[  54]    00C3: 8E D8                                 	mov ds, ax
[  55]        :                                       	
[  56]        :                                       	; reset led
[  57]    00C5: B8 00 00                              mov ax, 0
[  58]    00C8: E7 C7                                 out 199, ax
[  59]        :                                       	
[  60]        :                                       ; set graphical mode 320*200
[  61]    00CA: B4 00                                 mov ah, 0
[  62]    00CC: B0 13                                 mov al, 13h
[  63]    00CE: CD 10                                 int 10h
[  64]        :                                       
[  65]        :                                       ; start game
[  66]    00D0: E8 5D 01                              call game_border        ; initial game borders
[  67]    00D3: E8 21 01                              call show_score         ; initial player score
[  68]        :                                       
[  69]    00D6:                                       generate_piece:         ; initial game piece
[  70]    00D6: E8 A7 18                              call check_full     ; check full rows related to the last piece
[  71]        :                                       
[  72]    00D9: BA 3D 00                              mov dx, 61          ; check if the first row is blockd
[  73]    00DC: B9 9D 00                              mov cx, 157
[  74]    00DF: B4 0D                                 mov ah, 0Dh         ; get color of the block
[  75]    00E1: CD 10                                 int 10h
[  76]    00E3: 3C 00                                 cmp al, 0           ; if al!=black
[  77]    00E5: 74 03 E9 1F 02                        jnz call game_over
[  78]        :                                       
[  79]    00EA: C6 06 68 00 01                        mov down_blockd, 1 ; reset
[  80]    00EF: E8 3F 02                              call get_rand       ; dl=> 0(T), 1(L), 2(R), 3(S), 4(Z)
[  81]        :                                       
[  82]    00F2: 80 FA 00                              cmp dl,0            ; case T
[  83]    00F5: 75 1B                                 jnz next_rand2
[  84]        :                                       
[  85]    00F7: C7 06 16 00 3D 00                     mov start_row, 61
[  86]    00FD: C7 06 10 00 9D 00                     mov start_col, 157
[  87]    0103: C6 06 1E 00 74                        mov curr_shape, 't'
[  88]    0108: C6 06 21 00 05                        mov curr_color, 05h     ; color = purple
[  89]    010D: E8 3B 03                              call draw_t
[  90]    0110: EB 79                                 jmp continue
[  91]        :                                       
[  92]    0112:                                       next_rand2:
[  93]    0112: 80 FA 01                              cmp dl,1        ; case L
[  94]    0115: 75 1B                                 jnz next_rand3
[  95]        :                                       
[  96]    0117: C7 06 16 00 3D 00                     mov start_row, 61
[  97]    011D: C7 06 10 00 9D 00                     mov start_col, 157
[  98]    0123: C6 06 1E 00 6C                        mov curr_shape, 'l'
[  99]    0128: C6 06 21 00 0C                        mov curr_color, 0Ch     ; color = orange
[ 100]    012D: E8 48 04                              call draw_l
[ 101]    0130: EB 59                                 jmp continue
[ 102]        :                                       
[ 103]    0132:                                       next_rand3:
[ 104]    0132: 80 FA 02                              cmp dl,2        ; case Line
[ 105]    0135: 75 1B                                 jnz next_rand4
[ 106]        :                                       
[ 107]    0137: C7 06 16 00 3D 00                     mov start_row, 61
[ 108]    013D: C7 06 10 00 99 00                     mov start_col, 153
[ 109]    0143: C6 06 1E 00 72                        mov curr_shape, 'r'
[ 110]    0148: C6 06 21 00 0B                        mov curr_color, 0Bh     ; color = light blue
[ 111]    014D: E8 39 02                              call draw_line
[ 112]    0150: EB 39                                 jmp continue
[ 113]        :                                       
[ 114]    0152:                                       next_rand4:
[ 115]    0152: 80 FA 03                              cmp dl,3        ; case Square
[ 116]    0155: 75 1B                                 jnz next_rand5
[ 117]        :                                       
[ 118]    0157: C7 06 16 00 3D 00                     mov start_row, 61
[ 119]    015D: C7 06 10 00 9D 00                     mov start_col, 157
[ 120]    0163: C6 06 1E 00 73                        mov curr_shape, 's'
[ 121]    0168: C6 06 21 00 0E                        mov curr_color, 0Eh      ; color = yellow
[ 122]    016D: E8 97 02                              call draw_square
[ 123]    0170: EB 19                                 jmp continue
[ 124]        :                                       
[ 125]    0172:                                       next_rand5:         ; case Z
[ 126]    0172: C7 06 16 00 3D 00                     mov start_row, 61
[ 127]    0178: C7 06 10 00 9D 00                     mov start_col, 157
[ 128]    017E: C6 06 1E 00 7A                        mov curr_shape, 'z'
[ 129]    0183: C6 06 21 00 0A                        mov curr_color, 0Ah     ; color = green
[ 130]    0188: E8 1A 05                              call draw_z
[ 131]        :                                       
[ 132]        :                                       
[ 133]    018B:                                       continue:
[ 134]    018B: E8 51 10                              call check_down
[ 135]    018E: 80 3E 68 00 01                        cmp down_blockd, 1 ; if down way is blockd (0) generate new piece
[ 136]    0193: 74 03 E9 3E FF                        jnz generate_piece
[ 137]    0198: E8 03 00                              call get_input      ; get new keyboard input
[ 138]    019B: EB EE                                 jmp continue        ; else
[ 139]        :                                       
[ 140]    019D: CB                                    ret
[ 141]        :                                       main endp
[ 142]        :                                       
[ 143]        :                                       ;\--------------------------------------------------------------------------/
[ 144]        :                                       ;|                             Keyboard Input                               |
[ 145]        :                                       ;/--------------------------------------------------------------------------\
[ 146]        :                                       
[ 147]    019E:                                       get_input proc
[ 148]    019E:                                       invalid_input:
[ 149]    019E: B4 01                                 mov ah, 01h      ; check keyboard buffer
[ 150]    01A0: CD 16                                 int 16h
[ 151]    01A2: 75 11                                 jnz clear_buffer ; buffer is not empty
[ 152]        :                                       
[ 153]    01A4: E8 99 01                              call delay	
[ 154]    01A7: E8 96 01                              call delay
[ 155]    01AA: E8 93 01                              call delay
[ 156]    01AD: E8 90 01                              call delay
[ 157]    01B0: E8 CF 0E                              		call move_down
[ 158]    01B3: EB 41                                 		jmp input_done
[ 159]        :                                       
[ 160]    01B5:                                       clear_buffer:
[ 161]    01B5: B4 00                                 mov ah, 00h    ; clear buffer
[ 162]    01B7: CD 16                                 int 16h	
[ 163]    01B9: A2 6B 00                              mov char, al   ; switch case (char)
[ 164]        :                                       
[ 165]    01BC: 80 3E 6B 00 73                        cmp char,'s'
[ 166]    01C1: 75 05                                 jnz next_char
[ 167]    01C3: E8 BC 0E                              call move_down
[ 168]    01C6: EB 2E                                 jmp input_done
[ 169]        :                                       
[ 170]    01C8:                                       next_char:
[ 171]    01C8: 80 3E 6B 00 61                        cmp char,'a'
[ 172]    01CD: 75 05                                 jnz next_char2
[ 173]    01CF: E8 17 0A                              call move_left
[ 174]    01D2: EB 22                                 jmp input_done
[ 175]        :                                       
[ 176]    01D4:                                       next_char2:
[ 177]    01D4: 80 3E 6B 00 64                        cmp char,'d'
[ 178]    01D9: 75 05                                 jnz next_char3
[ 179]    01DB: E8 60 05                              call move_right
[ 180]    01DE: EB 16                                 jmp input_done
[ 181]        :                                       
[ 182]    01E0:                                       next_char3:
[ 183]    01E0: 80 3E 6B 00 77                        cmp char,'w'
[ 184]    01E5: 75 05                                 jnz next_char4
[ 185]    01E7: E8 CF 13                              call rotate
[ 186]    01EA: EB 0A                                 jmp input_done
[ 187]        :                                       
[ 188]    01EC:                                       next_char4:
[ 189]    01EC: 80 3E 6B 00 66                        cmp char,'f'
[ 190]    01F1: 75 AB                                 jnz invalid_input
[ 191]    01F3: E8 D9 0F                              call fast_down
[ 192]        :                                       
[ 193]    01F6:                                       input_done:
[ 194]    01F6: C3                                    ret
[ 195]        :                                       get_input endp
[ 196]        :                                       
[ 197]        :                                       ;\--------------------------------------------------------------------------/
[ 198]        :                                       ;|                                 Show Score                               |
[ 199]        :                                       ;/--------------------------------------------------------------------------\
[ 200]        :                                       
[ 201]    01F7:                                       show_score proc
[ 202]        :                                       ; convert score to digits
[ 203]    01F7: BE 00 00                              mov si, 0
[ 204]    01FA: A1 69 00                              mov ax, score
[ 205]    01FD:                                       convert:
[ 206]    01FD: BA 00 00                              mov  dx, 0   ; reset
[ 207]    0200: F7 36 70 00                           div ten
[ 208]    0204: 52                                    push dx      ; remainder
[ 209]    0205: 46                                    inc si
[ 210]    0206: 3D 00 00                              cmp ax,0     ; quotient
[ 211]    0209: 75 F2                                 jnz convert
[ 212]        :                                       
[ 213]        :                                       ; print "SCORE: "
[ 214]    020B: B4 02                                 mov ah, 02h      ; set cursor position
[ 215]    020D: B7 00                                 mov bh, 00       ; page number
[ 216]    020F: B6 05                                 mov dh, 5        ; row
[ 217]    0211: B2 10                                 mov dl, 16       ; column
[ 218]    0213: CD 10                                 int 10h
[ 219]    0215: B4 09                                 mov ah, 09h      ; output of a string
[ 220]    0217: BA 2C 00                              lea dx, score_msg
[ 221]    021A: CD 21                                 int 21h
[ 222]        :                                       
[ 223]        :                                       ;print score digits
[ 224]    021C:                                       print_score:
[ 225]    021C: 5A                                    pop dx
[ 226]    021D: 80 C2 30                              add dl, 30h  ; convert int to char
[ 227]    0220: B4 02                                 mov ah, 02h  ; print char
[ 228]    0222: CD 21                                 int 21h
[ 229]    0224: 4E                                    dec si
[ 230]    0225: 83 FE 00                              cmp si,0
[ 231]    0228: 75 F2                                 jnz print_score
[ 232]        :                                       
[ 233]        :                                       ;show score on led
[ 234]    022A: A1 69 00                              mov ax, score
[ 235]    022D: E7 C7                                 out 199, ax
[ 236]        :                                       
[ 237]    022F: C3                                    ret
[ 238]        :                                       show_score endp
[ 239]        :                                       
[ 240]        :                                       ;\--------------------------------------------------------------------------/
[ 241]        :                                       ;|                               Game Border                                |
[ 242]        :                                       ;/--------------------------------------------------------------------------\
[ 243]        :                                       
[ 244]    0230:                                       game_border proc
[ 245]    0230: B0 0F                                 mov al,0Fh  ; set white color
[ 246]        :                                       
[ 247]        :                                       ; top line
[ 248]    0232: 8B 0E 02 00                           	mov cx,[brd_ul+2]
[ 249]    0236: 8B 16 00 00                           	mov dx,brd_ul	   	   	
[ 250]    023A:                                       	top_border:
[ 251]    023A: E8 1F 01                              	    call draw_tile
[ 252]    023D: 8B 0E 02 00                           	   	mov cx,[brd_ul+2]
[ 253]    0241: 8B 16 00 00                           	    mov dx,brd_ul
[ 254]    0245: 83 C6 04                              	    add si,4
[ 255]    0248: 03 CE                                 	    add cx,si	   	
[ 256]    024A: 3B 0E 06 00                           cmp cx,[brd_ur+2]
[ 257]    024E: 75 EA                                 jnz top_border
[ 258]        :                                       
[ 259]        :                                       ; right line
[ 260]    0250: BE 00 00                              mov si,0
[ 261]    0253: 8B 0E 06 00                           mov cx,[brd_ur+2]
[ 262]    0257: 8B 16 04 00                           mov dx,brd_ur	   	   	
[ 263]    025B:                                       	right_border:
[ 264]    025B: E8 FE 00                              	    call draw_tile
[ 265]    025E: 8B 0E 06 00                           	   	mov cx,[brd_ur+2]
[ 266]    0262: 8B 16 04 00                           	    mov dx,brd_ur
[ 267]    0266: 83 C6 04                              	    add si,4
[ 268]    0269: 03 D6                                 	    add dx,si	   	
[ 269]    026B: 3B 16 0C 00                           cmp dx,brd_dr
[ 270]    026F: 75 EA                                 jnz right_border
[ 271]        :                                       
[ 272]        :                                       ; bottom line
[ 273]    0271: BE 00 00                              mov si,0
[ 274]    0274: 8B 0E 0E 00                           	mov cx,[brd_dr+2]
[ 275]    0278: 8B 16 0C 00                           	mov dx,brd_dr	   	   	
[ 276]    027C:                                       	bottom_border:
[ 277]    027C: E8 DD 00                              	     call draw_tile
[ 278]    027F: 8B 0E 0E 00                           	   	 mov cx,[brd_dr+2]
[ 279]    0283: 8B 16 0C 00                           	     mov dx,brd_dr
[ 280]    0287: 83 C6 04                              	     add si,4
[ 281]    028A: 2B CE                                 	     sub cx,si	   	
[ 282]    028C: 3B 0E 0A 00                           cmp cx,[brd_dl+2]
[ 283]    0290: 75 EA                                 jnz bottom_border
[ 284]        :                                       
[ 285]        :                                       ; left line
[ 286]    0292: BE 00 00                              mov si,0
[ 287]    0295: 8B 0E 0A 00                           mov cx,[brd_dl+2]
[ 288]    0299: 8B 16 08 00                           	mov dx,brd_dl	   	   	
[ 289]    029D:                                       left_border:
[ 290]    029D: E8 BC 00                              	    call draw_tile
[ 291]    02A0: 8B 0E 0A 00                           	   	mov cx,[brd_dl+2]
[ 292]    02A4: 8B 16 08 00                           	    mov dx,brd_dl
[ 293]    02A8: 83 C6 04                              	    add si,4
[ 294]    02AB: 2B D6                                 	    sub dx,si	   	
[ 295]    02AD: 3B 16 00 00                           cmp dx,brd_ul
[ 296]    02B1: 75 EA                                 jnz left_border
[ 297]        :                                       
[ 298]        :                                       ; guide of D
[ 299]    02B3: B4 02                                 mov ah, 02h      ; set cursor position
[ 300]    02B5: B7 00                                 mov bh, 00       ; page number
[ 301]    02B7: B6 07                                 mov dh, 7        ; row
[ 302]    02B9: B2 06                                 mov dl, 6        ; column
[ 303]    02BB: CD 10                                 int 10h
[ 304]    02BD: B4 09                                 mov ah, 09h      ; output of a string
[ 305]    02BF: BA 3E 00                              lea dx, right_msg
[ 306]    02C2: CD 21                                 int 21h
[ 307]        :                                       
[ 308]        :                                       ; guide of A
[ 309]    02C4: B4 02                                 mov ah, 02h      ; set cursor position
[ 310]    02C6: B7 00                                 mov bh, 00       ; page number
[ 311]    02C8: B6 09                                 mov dh, 9        ; row
[ 312]    02CA: B2 06                                 mov dl, 6        ; column
[ 313]    02CC: CD 10                                 int 10h
[ 314]    02CE: B4 09                                 mov ah, 09h      ; output of a string
[ 315]    02D0: BA 34 00                              lea dx, left_msg
[ 316]    02D3: CD 21                                 int 21h
[ 317]        :                                       
[ 318]        :                                       ; guide of S
[ 319]    02D5: B4 02                                 mov ah, 02h      ; set cursor position
[ 320]    02D7: B7 00                                 mov bh, 00       ; page number
[ 321]    02D9: B6 0B                                 mov dh, 11       ; row
[ 322]    02DB: B2 06                                 mov dl, 6        ; column
[ 323]    02DD: CD 10                                 int 10h
[ 324]    02DF: B4 09                                 mov ah, 09h      ; output of a string
[ 325]    02E1: BA 52 00                              lea dx, down_msg
[ 326]    02E4: CD 21                                 int 21h
[ 327]        :                                       
[ 328]        :                                       ; guide of F
[ 329]    02E6: B4 02                                 mov ah, 02h      ; set cursor position
[ 330]    02E8: B7 00                                 mov bh, 00       ; page number
[ 331]    02EA: B6 0D                                 mov dh, 13       ; row
[ 332]    02EC: B2 06                                 mov dl, 6        ; column
[ 333]    02EE: CD 10                                 int 10h
[ 334]    02F0: B4 09                                 mov ah, 09h      ; output of a string
[ 335]    02F2: BA 48 00                              lea dx, fast_msg
[ 336]    02F5: CD 21                                 int 21h
[ 337]        :                                       
[ 338]        :                                       ; guide of W
[ 339]    02F7: B4 02                                 mov ah, 02h      ; set cursor position
[ 340]    02F9: B7 00                                 mov bh, 00       ; page number
[ 341]    02FB: B6 0F                                 mov dh, 15       ; row
[ 342]    02FD: B2 06                                 mov dl, 6        ; column
[ 343]    02FF: CD 10                                 int 10h
[ 344]    0301: B4 09                                 mov ah, 09h      ; output of a string
[ 345]    0303: BA 5C 00                              lea dx, rotate_msg
[ 346]    0306: CD 21                                 int 21h
[ 347]        :                                       
[ 348]    0308: C3                                    ret
[ 349]        :                                       game_border endp
[ 350]        :                                       
[ 351]        :                                       ;\--------------------------------------------------------------------------/
[ 352]        :                                       ;|                              Game Over                                   |
[ 353]        :                                       ;/--------------------------------------------------------------------------\
[ 354]        :                                       
[ 355]    0309:                                       game_over proc
[ 356]    0309: BE 22 00                              mov si, offset game_over_msg ; load game over message
[ 357]    030C: B2 10                                 mov dl, 16          ; col
[ 358]    030E: B6 0B                                 mov dh, 11          ; row
[ 359]        :                                       
[ 360]    0310:                                       set_cursor:
[ 361]    0310: B4 02                                 mov ah, 2
[ 362]    0312: B7 00                                 mov bh, 0
[ 363]    0314: CD 10                                 int 10h
[ 364]        :                                       
[ 365]    0316:                                       while:
[ 366]    0316: 8A 04                                 mov al, [si]
[ 367]    0318: 3C 24                                 cmp al, '$'     ; end of string
[ 368]    031A: 74 10                                 je finish
[ 369]        :                                       
[ 370]    031C: B4 09                                 mov  ah, 9      ; print char interrupt
[ 371]    031E: B7 00                                 mov  bh, 0
[ 372]    0320: B3 04                                 mov  bl, 04h    ; red color
[ 373]    0322: B9 01 00                              mov  cx, 1      ; times to display char
[ 374]    0325: CD 10                                 int  10h
[ 375]        :                                       
[ 376]    0327: 46                                    inc si          ; next char
[ 377]    0328: FE C2                                 inc dl          ; next col
[ 378]    032A: EB E4                                 jmp set_cursor
[ 379]        :                                       
[ 380]    032C:                                       finish:
[ 381]    032C: B4 4C                                 mov ah, 4Ch         ; stop program
[ 382]    032E: CD 21                                 int 21h
[ 383]        :                                       
[ 384]    0330: C3                                    ret
[ 385]        :                                       game_over endp
[ 386]        :                                       
[ 387]        :                                       ;\--------------------------------------------------------------------------/
[ 388]        :                                       ;|                           Generate Random Num.                           |
[ 389]        :                                       ;/--------------------------------------------------------------------------\
[ 390]        :                                       
[ 391]    0331:                                       get_rand proc
[ 392]    0331: B4 00                                 mov ah, 00h  ; get system time
[ 393]    0333: CD 1A                                 int 1ah      ; cx:dx -> number of clock ticks since midnight
[ 394]    0335: 8B C2                                 mov  ax, dx
[ 395]    0337: BA 00 00                              mov  dx, 0
[ 396]    033A: B9 05 00                              mov  cx, 5
[ 397]    033D: F7 F1                                 div  cx      ; remainder of the division from 0 to 9
[ 398]        :                                       
[ 399]    033F: C3                                    ret
[ 400]        :                                       get_rand endp
[ 401]        :                                       
[ 402]        :                                       ;\--------------------------------------------------------------------------/
[ 403]        :                                       ;|                                  Delay                                   |
[ 404]        :                                       ;/--------------------------------------------------------------------------\
[ 405]        :                                       
[ 406]    0340:                                       delay proc
[ 407]    0340: B8 FA FF                              mov ax, 65530
[ 408]    0343:                                       loop1:
[ 409]    0343: 48                                    dec ax
[ 410]    0344: 3D 00 00                              cmp ax, 0
[ 411]    0347: 75 FA                                 jnz loop1
[ 412]        :                                       
[ 413]    0349: B8 FA FF                              mov ax, 65530
[ 414]    034C:                                       loop2:
[ 415]    034C: 48                                    dec ax
[ 416]    034D: 3D 00 00                              cmp ax, 0
[ 417]    0350: 75 FA                                 jnz loop2
[ 418]        :                                       
[ 419]    0352: B8 FA FF                              mov ax, 65530
[ 420]    0355:                                       loop3:
[ 421]    0355: 48                                    dec ax
[ 422]    0356: 3D 00 00                              cmp ax, 0
[ 423]    0359: 75 FA                                 jnz loop3
[ 424]        :                                       
[ 425]    035B: C3                                    ret
[ 426]        :                                       endp delay
[ 427]        :                                       
[ 428]        :                                       ;\--------------------------------------------------------------------------/
[ 429]        :                                       ;|                                Draw Tile                                 |
[ 430]        :                                       ;/--------------------------------------------------------------------------\
[ 431]        :                                       
[ 432]    035C:                                       draw_tile proc
[ 433]        :                                       ;dx,cx,al are set as the starting point(col,row) and color
[ 434]    035C: 89 0E 14 00                           mov rst_col, cx
[ 435]    0360: 89 0E 12 00                           mov end_col, cx
[ 436]    0364: 89 16 18 00                           mov end_row, dx
[ 437]    0368: 83 06 12 00 04                        add end_col, 4
[ 438]    036D: 83 06 18 00 04                        add end_row, 4
[ 439]    0372: B4 0C                                 mov ah, 0ch
[ 440]        :                                       
[ 441]    0374:                                       loop_tile:
[ 442]    0374: CD 10                                 int 10h
[ 443]    0376: 41                                    inc cx
[ 444]    0377: 3B 0E 12 00                           cmp cx, end_col   ; end of col
[ 445]    037B: 75 F7                                 jnz loop_tile
[ 446]        :                                       
[ 447]    037D: 8B 0E 14 00                           mov cx, rst_col   ; reset col
[ 448]    0381: 42                                    inc dx
[ 449]    0382: 3B 16 18 00                           cmp dx, end_row   ; end of row
[ 450]    0386: 75 EC                                 jnz loop_tile
[ 451]        :                                       
[ 452]    0388: C3                                    ret
[ 453]        :                                       draw_tile endp
[ 454]        :                                       
[ 455]        :                                       ;\--------------------------------------------------------------------------/
[ 456]        :                                       ;|                       Draw Piece - Line(Horizontal)                      |
[ 457]        :                                       ;/--------------------------------------------------------------------------\
[ 458]        :                                       
[ 459]    0389:                                       draw_line proc
[ 460]    0389: A0 21 00                              mov al, curr_color
[ 461]        :                                       
[ 462]    038C: 8B 0E 10 00                           mov cx, start_col   ; col = 153
[ 463]    0390: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 464]    0394: E8 C5 FF                              call draw_tile
[ 465]        :                                       
[ 466]    0397: 8B 0E 10 00                           mov cx, start_col
[ 467]    039B: 83 C1 04                              add cx, 4            ; col+4
[ 468]    039E: 8B 16 16 00                           mov dx, start_row
[ 469]    03A2: E8 B7 FF                              call draw_tile
[ 470]        :                                       
[ 471]    03A5: 8B 0E 10 00                           mov cx, start_col
[ 472]    03A9: 83 C1 08                              add cx, 8            ; col+8
[ 473]    03AC: 8B 16 16 00                           mov dx, start_row
[ 474]    03B0: E8 A9 FF                              call draw_tile
[ 475]        :                                       
[ 476]    03B3: 8B 0E 10 00                           mov cx, start_col
[ 477]    03B7: 83 C1 0C                              add cx, 12           ; col+12
[ 478]    03BA: 8B 16 16 00                           mov dx, start_row
[ 479]    03BE: E8 9B FF                              call draw_tile
[ 480]        :                                       
[ 481]    03C1: C7 06 1F 00 00 00                     mov curr_ang, 0
[ 482]    03C7: C3                                    ret
[ 483]        :                                       draw_line endp
[ 484]        :                                       
[ 485]        :                                       ;\--------------------------------------------------------------------------/
[ 486]        :                                       ;|                       Draw Piece - Line(Vertical)                        |
[ 487]        :                                       ;/--------------------------------------------------------------------------\
[ 488]        :                                       
[ 489]    03C8:                                       draw_line_90 proc
[ 490]    03C8: A0 21 00                              mov al, curr_color
[ 491]        :                                       
[ 492]    03CB: 8B 0E 10 00                           mov cx, start_col   ; col = 153
[ 493]    03CF: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 494]    03D3: E8 86 FF                              call draw_tile
[ 495]        :                                       
[ 496]    03D6: 8B 16 16 00                           mov dx, start_row
[ 497]    03DA: 83 C2 04                              add dx, 4            ; row+4
[ 498]    03DD: 8B 0E 10 00                           mov cx, start_col
[ 499]    03E1: E8 78 FF                              call draw_tile
[ 500]        :                                       
[ 501]    03E4: 8B 16 16 00                           mov dx, start_row
[ 502]    03E8: 83 C2 08                              add dx, 8            ; row+8
[ 503]    03EB: 8B 0E 10 00                           mov cx, start_col
[ 504]    03EF: E8 6A FF                              call draw_tile
[ 505]        :                                       
[ 506]    03F2: 8B 16 16 00                           mov dx, start_row
[ 507]    03F6: 83 C2 0C                              add dx, 12            ; row+12
[ 508]    03F9: 8B 0E 10 00                           mov cx, start_col
[ 509]    03FD: E8 5C FF                              call draw_tile
[ 510]        :                                       
[ 511]    0400: C7 06 1F 00 5A 00                     mov curr_ang, 90
[ 512]    0406: C3                                    ret
[ 513]        :                                       draw_line_90 endp
[ 514]        :                                       
[ 515]        :                                       ;\--------------------------------------------------------------------------/
[ 516]        :                                       ;|                          Draw Piece - Square                             |
[ 517]        :                                       ;/--------------------------------------------------------------------------\
[ 518]        :                                       
[ 519]    0407:                                       draw_square proc
[ 520]    0407: A0 21 00                              mov al, curr_color
[ 521]        :                                       
[ 522]    040A: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 523]    040E: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 524]    0412: E8 47 FF                              call draw_tile
[ 525]        :                                       
[ 526]    0415: 8B 1E 10 00                           mov bx, start_col
[ 527]    0419: 83 C3 04                              add bx, 4           ; col+4
[ 528]    041C: 8B CB                                 mov cx, bx
[ 529]    041E: 8B 16 16 00                           mov dx, start_row
[ 530]    0422: E8 37 FF                              call draw_tile
[ 531]        :                                       
[ 532]    0425: 8B 1E 16 00                           mov bx, start_row
[ 533]    0429: 83 C3 04                              add bx, 4           ; row+4
[ 534]    042C: 8B D3                                 mov dx, bx
[ 535]    042E: 8B 0E 10 00                           mov cx, start_col
[ 536]    0432: E8 27 FF                              call draw_tile
[ 537]        :                                       
[ 538]    0435: 8B 1E 10 00                           mov bx, start_col
[ 539]    0439: 83 C3 04                              add bx, 4           ; col+4
[ 540]    043C: 8B CB                                 mov cx, bx
[ 541]    043E: 8B 1E 16 00                           mov bx, start_row
[ 542]    0442: 83 C3 04                              add bx, 4           ; row+4
[ 543]    0445: 8B D3                                 mov dx, bx
[ 544]    0447: E8 12 FF                              call draw_tile
[ 545]        :                                       
[ 546]    044A: C3                                    ret
[ 547]        :                                       draw_square endp
[ 548]        :                                       
[ 549]        :                                       ;\--------------------------------------------------------------------------/
[ 550]        :                                       ;|                             Draw Piece - T                               |
[ 551]        :                                       ;/--------------------------------------------------------------------------\
[ 552]        :                                       
[ 553]    044B:                                       draw_t proc
[ 554]    044B: A0 21 00                              mov al, curr_color
[ 555]        :                                       
[ 556]    044E: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 557]    0452: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 558]    0456: E8 03 FF                              call draw_tile
[ 559]        :                                       
[ 560]    0459: 8B 1E 10 00                           mov bx, start_col
[ 561]    045D: 83 C3 04                              add bx, 4           ; col+4
[ 562]    0460: 8B CB                                 mov cx, bx
[ 563]    0462: 8B 16 16 00                           mov dx, start_row
[ 564]    0466: E8 F3 FE                              call draw_tile
[ 565]        :                                       
[ 566]    0469: 8B 1E 10 00                           mov bx, start_col
[ 567]    046D: 83 C3 08                              add bx, 8           ; col+8
[ 568]    0470: 8B CB                                 mov cx, bx
[ 569]    0472: 8B 16 16 00                           mov dx, start_row
[ 570]    0476: E8 E3 FE                              call draw_tile
[ 571]        :                                       
[ 572]    0479: 8B 1E 10 00                           mov bx, start_col
[ 573]    047D: 83 C3 04                              add bx, 4           ; col+4
[ 574]    0480: 8B CB                                 mov cx, bx
[ 575]    0482: 8B 1E 16 00                           mov bx, start_row
[ 576]    0486: 83 C3 04                              add bx, 4           ; row+4
[ 577]    0489: 8B D3                                 mov dx, bx
[ 578]    048B: E8 CE FE                              call draw_tile
[ 579]        :                                       
[ 580]    048E: C7 06 1F 00 00 00                     mov curr_ang, 0
[ 581]    0494: C3                                    ret
[ 582]        :                                       draw_t endp
[ 583]        :                                       
[ 584]        :                                       ;\--------------------------------------------------------------------------/
[ 585]        :                                       ;|                           Draw Piece - T(90)                             |
[ 586]        :                                       ;/--------------------------------------------------------------------------\
[ 587]        :                                       
[ 588]    0495:                                       draw_t_90 proc
[ 589]    0495: A0 21 00                              mov al, curr_color
[ 590]        :                                       
[ 591]    0498: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 592]    049C: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 593]    04A0: E8 B9 FE                              call draw_tile
[ 594]        :                                       
[ 595]    04A3: 8B 1E 16 00                           mov bx, start_row
[ 596]    04A7: 83 C3 04                              add bx, 4           ; row+4
[ 597]    04AA: 8B D3                                 mov dx, bx
[ 598]    04AC: 8B 0E 10 00                           mov cx, start_col
[ 599]    04B0: E8 A9 FE                              call draw_tile
[ 600]        :                                       
[ 601]    04B3: 8B 1E 16 00                           mov bx, start_row
[ 602]    04B7: 83 C3 08                              add bx, 8           ; row+8
[ 603]    04BA: 8B D3                                 mov dx, bx
[ 604]    04BC: 8B 0E 10 00                           mov cx, start_col
[ 605]    04C0: E8 99 FE                              call draw_tile
[ 606]        :                                       
[ 607]    04C3: 8B 1E 10 00                           mov bx, start_col
[ 608]    04C7: 83 EB 04                              sub bx, 4           ; col-4
[ 609]    04CA: 8B CB                                 mov cx, bx
[ 610]    04CC: 8B 1E 16 00                           mov bx, start_row
[ 611]    04D0: 83 C3 04                              add bx, 4           ; row+4
[ 612]    04D3: 8B D3                                 mov dx, bx
[ 613]    04D5: E8 84 FE                              call draw_tile
[ 614]        :                                       
[ 615]    04D8: C7 06 1F 00 5A 00                     mov curr_ang, 90
[ 616]    04DE: C3                                    ret
[ 617]        :                                       draw_t_90 endp
[ 618]        :                                       
[ 619]        :                                       ;\--------------------------------------------------------------------------/
[ 620]        :                                       ;|                          Draw Piece - T(180)                             |
[ 621]        :                                       ;/--------------------------------------------------------------------------\
[ 622]        :                                       
[ 623]    04DF:                                       draw_t_180 proc
[ 624]    04DF: A0 21 00                              mov al, curr_color
[ 625]        :                                       
[ 626]    04E2: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 627]    04E6: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 628]    04EA: E8 6F FE                              call draw_tile
[ 629]        :                                       
[ 630]    04ED: 8B 1E 10 00                           mov bx, start_col
[ 631]    04F1: 83 EB 04                              sub bx, 4           ; col-4
[ 632]    04F4: 8B CB                                 mov cx, bx
[ 633]    04F6: 8B 1E 16 00                           mov bx, start_row
[ 634]    04FA: 83 C3 04                              add bx, 4           ; row+4
[ 635]    04FD: 8B D3                                 mov dx, bx
[ 636]    04FF: E8 5A FE                              call draw_tile
[ 637]        :                                       
[ 638]    0502: 8B 1E 16 00                           mov bx, start_row
[ 639]    0506: 83 C3 04                              add bx, 4           ; row+4
[ 640]    0509: 8B D3                                 mov dx, bx
[ 641]    050B: 8B 0E 10 00                           mov cx, start_col
[ 642]    050F: E8 4A FE                              call draw_tile
[ 643]        :                                       
[ 644]    0512: 8B 1E 10 00                           mov bx, start_col
[ 645]    0516: 83 C3 04                              add bx, 4           ; col+4
[ 646]    0519: 8B CB                                 mov cx, bx
[ 647]    051B: 8B 1E 16 00                           mov bx, start_row
[ 648]    051F: 83 C3 04                              add bx, 4           ; row+4
[ 649]    0522: 8B D3                                 mov dx, bx
[ 650]    0524: E8 35 FE                              call draw_tile
[ 651]        :                                       
[ 652]    0527: C7 06 1F 00 B4 00                     mov curr_ang, 180
[ 653]    052D: C3                                    ret
[ 654]        :                                       draw_t_180 endp
[ 655]        :                                       
[ 656]        :                                       ;\--------------------------------------------------------------------------/
[ 657]        :                                       ;|                          Draw Piece - T(270)                             |
[ 658]        :                                       ;/--------------------------------------------------------------------------\
[ 659]        :                                       
[ 660]    052E:                                       draw_t_270 proc
[ 661]    052E: A0 21 00                              mov al, curr_color
[ 662]        :                                       
[ 663]    0531: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 664]    0535: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 665]    0539: E8 20 FE                              call draw_tile
[ 666]        :                                       
[ 667]    053C: 8B 1E 16 00                           mov bx, start_row
[ 668]    0540: 83 C3 04                              add bx, 4           ; row+4
[ 669]    0543: 8B D3                                 mov dx, bx
[ 670]    0545: 8B 0E 10 00                           mov cx, start_col
[ 671]    0549: E8 10 FE                              call draw_tile
[ 672]        :                                       
[ 673]    054C: 8B 1E 16 00                           mov bx, start_row
[ 674]    0550: 83 C3 08                              add bx, 8           ; row+8
[ 675]    0553: 8B D3                                 mov dx, bx
[ 676]    0555: 8B 0E 10 00                           mov cx, start_col
[ 677]    0559: E8 00 FE                              call draw_tile
[ 678]        :                                       
[ 679]    055C: 8B 1E 10 00                           mov bx, start_col
[ 680]    0560: 83 C3 04                              add bx, 4           ; col+4
[ 681]    0563: 8B CB                                 mov cx, bx
[ 682]    0565: 8B 1E 16 00                           mov bx, start_row
[ 683]    0569: 83 C3 04                              add bx, 4           ; row+4
[ 684]    056C: 8B D3                                 mov dx, bx
[ 685]    056E: E8 EB FD                              call draw_tile
[ 686]        :                                       
[ 687]    0571: C7 06 1F 00 0E 01                     mov curr_ang, 270
[ 688]    0577: C3                                    ret
[ 689]        :                                       draw_t_270 endp
[ 690]        :                                       
[ 691]        :                                       ;\--------------------------------------------------------------------------/
[ 692]        :                                       ;|                             Draw Piece - L                               |
[ 693]        :                                       ;/--------------------------------------------------------------------------\
[ 694]        :                                       
[ 695]    0578:                                       draw_l proc
[ 696]    0578: A0 21 00                              mov al, curr_color
[ 697]        :                                       
[ 698]    057B: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 699]    057F: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 700]    0583: E8 D6 FD                              call draw_tile
[ 701]        :                                       
[ 702]    0586: 8B 1E 16 00                           mov bx, start_row
[ 703]    058A: 83 C3 04                              add bx, 4           ; row+4
[ 704]    058D: 8B D3                                 mov dx, bx
[ 705]    058F: 8B 0E 10 00                           mov cx, start_col
[ 706]    0593: E8 C6 FD                              call draw_tile
[ 707]        :                                       
[ 708]    0596: 8B 1E 16 00                           mov bx, start_row
[ 709]    059A: 83 C3 08                              add bx, 8           ; row+8
[ 710]    059D: 8B D3                                 mov dx, bx
[ 711]    059F: 8B 0E 10 00                           mov cx, start_col
[ 712]    05A3: E8 B6 FD                              call draw_tile
[ 713]        :                                       
[ 714]    05A6: 8B 1E 10 00                           mov bx, start_col
[ 715]    05AA: 83 C3 04                              add bx, 4           ; col+4
[ 716]    05AD: 8B CB                                 mov cx, bx
[ 717]    05AF: 8B 1E 16 00                           mov bx, start_row
[ 718]    05B3: 83 C3 08                              add bx, 8           ; row+8
[ 719]    05B6: 8B D3                                 mov dx, bx
[ 720]    05B8: E8 A1 FD                              call draw_tile
[ 721]        :                                       
[ 722]    05BB: C7 06 1F 00 00 00                     mov curr_ang, 0
[ 723]    05C1: C3                                    ret
[ 724]        :                                       draw_l endp
[ 725]        :                                       
[ 726]        :                                       ;\--------------------------------------------------------------------------/
[ 727]        :                                       ;|                           Draw Piece - L(90)                             |
[ 728]        :                                       ;/--------------------------------------------------------------------------\
[ 729]        :                                       
[ 730]    05C2:                                       draw_l_90 proc
[ 731]    05C2: A0 21 00                              mov al, curr_color
[ 732]        :                                       
[ 733]    05C5: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 734]    05C9: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 735]    05CD: E8 8C FD                              call draw_tile
[ 736]        :                                       
[ 737]    05D0: 8B 1E 10 00                           mov bx, start_col
[ 738]    05D4: 83 C3 04                              add bx, 4           ; col+4
[ 739]    05D7: 8B CB                                 mov cx, bx
[ 740]    05D9: 8B 16 16 00                           mov dx, start_row
[ 741]    05DD: E8 7C FD                              call draw_tile
[ 742]        :                                       
[ 743]    05E0: 8B 1E 10 00                           mov bx, start_col
[ 744]    05E4: 83 C3 08                              add bx, 8           ; col+8
[ 745]    05E7: 8B CB                                 mov cx, bx
[ 746]    05E9: 8B 16 16 00                           mov dx, start_row
[ 747]    05ED: E8 6C FD                              call draw_tile
[ 748]        :                                       
[ 749]    05F0: 8B 0E 10 00                           mov cx, start_col
[ 750]    05F4: 8B 1E 16 00                           mov bx, start_row
[ 751]    05F8: 83 C3 04                              add bx, 4           ; row+4
[ 752]    05FB: 8B D3                                 mov dx, bx
[ 753]    05FD: E8 5C FD                              call draw_tile
[ 754]        :                                       
[ 755]    0600: C7 06 1F 00 5A 00                     mov curr_ang, 90
[ 756]    0606: C3                                    ret
[ 757]        :                                       draw_l_90 endp
[ 758]        :                                       
[ 759]        :                                       ;\--------------------------------------------------------------------------/
[ 760]        :                                       ;|                          Draw Piece - L(180)                             |
[ 761]        :                                       ;/--------------------------------------------------------------------------\
[ 762]        :                                       
[ 763]    0607:                                       draw_l_180 proc
[ 764]    0607: A0 21 00                              mov al, curr_color
[ 765]        :                                       
[ 766]    060A: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 767]    060E: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 768]    0612: E8 47 FD                              call draw_tile
[ 769]        :                                       
[ 770]    0615: 8B 1E 10 00                           mov bx, start_col
[ 771]    0619: 83 C3 04                              add bx, 4           ; col+4
[ 772]    061C: 8B CB                                 mov cx, bx
[ 773]    061E: 8B 16 16 00                           mov dx, start_row
[ 774]    0622: E8 37 FD                              call draw_tile
[ 775]        :                                       
[ 776]    0625: 8B 1E 10 00                           mov bx, start_col
[ 777]    0629: 83 C3 04                              add bx, 4           ; col+4
[ 778]    062C: 8B CB                                 mov cx, bx
[ 779]    062E: 8B 1E 16 00                           mov bx, start_row
[ 780]    0632: 83 C3 04                              add bx, 4           ; row+4
[ 781]    0635: 8B D3                                 mov dx, bx
[ 782]    0637: E8 22 FD                              call draw_tile
[ 783]        :                                       
[ 784]    063A: 8B 1E 10 00                           mov bx, start_col
[ 785]    063E: 83 C3 04                              add bx, 4           ; col+4
[ 786]    0641: 8B CB                                 mov cx, bx
[ 787]    0643: 8B 1E 16 00                           mov bx, start_row
[ 788]    0647: 83 C3 08                              add bx, 8           ; row+8
[ 789]    064A: 8B D3                                 mov dx, bx
[ 790]    064C: E8 0D FD                              call draw_tile
[ 791]        :                                       
[ 792]    064F: C7 06 1F 00 B4 00                     mov curr_ang, 180
[ 793]    0655: C3                                    ret
[ 794]        :                                       draw_l_180 endp
[ 795]        :                                       
[ 796]        :                                       ;\--------------------------------------------------------------------------/
[ 797]        :                                       ;|                          Draw Piece - L(270)                             |
[ 798]        :                                       ;/--------------------------------------------------------------------------\
[ 799]        :                                       
[ 800]    0656:                                       draw_l_270 proc
[ 801]    0656: A0 21 00                              mov al, curr_color
[ 802]        :                                       
[ 803]    0659: 8B 0E 10 00                           mov cx, start_col   ; col = 157
[ 804]    065D: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 805]    0661: E8 F8 FC                              call draw_tile
[ 806]        :                                       
[ 807]    0664: 8B 1E 16 00                           mov bx, start_row
[ 808]    0668: 83 C3 04                              add bx, 4           ; row+4
[ 809]    066B: 8B D3                                 mov dx, bx
[ 810]    066D: 8B 0E 10 00                           mov cx, start_col
[ 811]    0671: E8 E8 FC                              call draw_tile
[ 812]        :                                       
[ 813]    0674: 8B 1E 16 00                           mov bx, start_row
[ 814]    0678: 83 C3 04                              add bx, 4           ; row+4
[ 815]    067B: 8B D3                                 mov dx, bx
[ 816]    067D: 8B 1E 10 00                           mov bx, start_col
[ 817]    0681: 83 EB 04                              sub bx, 4           ; col-4
[ 818]    0684: 8B CB                                 mov cx, bx
[ 819]    0686: E8 D3 FC                              call draw_tile
[ 820]        :                                       
[ 821]    0689: 8B 1E 16 00                           mov bx, start_row
[ 822]    068D: 83 C3 04                              add bx, 4           ; row+4
[ 823]    0690: 8B D3                                 mov dx, bx
[ 824]    0692: 8B 1E 10 00                           mov bx, start_col
[ 825]    0696: 83 EB 08                              sub bx, 8           ; col-8
[ 826]    0699: 8B CB                                 mov cx, bx
[ 827]    069B: E8 BE FC                              call draw_tile
[ 828]        :                                       
[ 829]    069E: C7 06 1F 00 0E 01                     mov curr_ang, 270
[ 830]    06A4: C3                                    ret
[ 831]        :                                       draw_l_270 endp
[ 832]        :                                       
[ 833]        :                                       ;\--------------------------------------------------------------------------/
[ 834]        :                                       ;|                             Draw Piece - Z                               |
[ 835]        :                                       ;/--------------------------------------------------------------------------\
[ 836]        :                                       
[ 837]    06A5:                                       draw_z proc
[ 838]    06A5: A0 21 00                              mov al, curr_color
[ 839]        :                                       
[ 840]    06A8: 8B 0E 10 00                           mov cx, start_col   ; col = 161
[ 841]    06AC: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 842]    06B0: E8 A9 FC                              call draw_tile
[ 843]        :                                       
[ 844]    06B3: 8B 1E 10 00                           mov bx, start_col
[ 845]    06B7: 83 C3 04                              add bx, 4           ; col+4
[ 846]    06BA: 8B CB                                 mov cx, bx
[ 847]    06BC: 8B 16 16 00                           mov dx, start_row
[ 848]    06C0: E8 99 FC                              call draw_tile
[ 849]        :                                       
[ 850]    06C3: 8B 1E 16 00                           mov bx, start_row
[ 851]    06C7: 83 C3 04                              add bx, 4           ; row+4
[ 852]    06CA: 8B D3                                 mov dx, bx
[ 853]    06CC: 8B 0E 10 00                           mov cx, start_col
[ 854]    06D0: E8 89 FC                              call draw_tile
[ 855]        :                                       
[ 856]    06D3: 8B 1E 10 00                           mov bx, start_col
[ 857]    06D7: 83 EB 04                              sub bx, 4           ; col-4
[ 858]    06DA: 8B CB                                 mov cx, bx
[ 859]    06DC: 8B 1E 16 00                           mov bx, start_row
[ 860]    06E0: 83 C3 04                              add bx, 4           ; row+4
[ 861]    06E3: 8B D3                                 mov dx, bx
[ 862]    06E5: E8 74 FC                              call draw_tile
[ 863]        :                                       
[ 864]    06E8: C7 06 1F 00 00 00                     mov curr_ang, 0
[ 865]    06EE: C3                                    ret
[ 866]        :                                       draw_z endp
[ 867]        :                                       
[ 868]        :                                       ;\--------------------------------------------------------------------------/
[ 869]        :                                       ;|                          Draw Piece - Z(90)                              |
[ 870]        :                                       ;/--------------------------------------------------------------------------\
[ 871]        :                                       
[ 872]    06EF:                                       draw_z_90 proc
[ 873]    06EF: A0 21 00                              mov al, curr_color
[ 874]        :                                       
[ 875]    06F2: 8B 0E 10 00                           mov cx, start_col   ; col = 161
[ 876]    06F6: 8B 16 16 00                           mov dx, start_row   ; row = 61
[ 877]    06FA: E8 5F FC                              call draw_tile
[ 878]        :                                       
[ 879]    06FD: 8B 1E 16 00                           mov bx, start_row
[ 880]    0701: 83 C3 04                              add bx, 4           ; row+4
[ 881]    0704: 8B D3                                 mov dx, bx
[ 882]    0706: 8B 0E 10 00                           mov cx, start_col
[ 883]    070A: E8 4F FC                              call draw_tile
[ 884]        :                                       
[ 885]    070D: 8B 1E 10 00                           mov bx, start_col
[ 886]    0711: 83 C3 04                              add bx, 4           ; col+4
[ 887]    0714: 8B CB                                 mov cx, bx
[ 888]    0716: 8B 1E 16 00                           mov bx, start_row
[ 889]    071A: 83 C3 04                              add bx, 4           ; row+4
[ 890]    071D: 8B D3                                 mov dx, bx
[ 891]    071F: E8 3A FC                              call draw_tile
[ 892]        :                                       
[ 893]    0722: 8B 1E 10 00                           mov bx, start_col
[ 894]    0726: 83 C3 04                              add bx, 4           ; col+4
[ 895]    0729: 8B CB                                 mov cx, bx
[ 896]    072B: 8B 1E 16 00                           mov bx, start_row
[ 897]    072F: 83 C3 08                              add bx, 8           ; row+8
[ 898]    0732: 8B D3                                 mov dx, bx
[ 899]    0734: E8 25 FC                              call draw_tile
[ 900]        :                                       
[ 901]    0737: C7 06 1F 00 5A 00                     mov curr_ang, 90
[ 902]    073D: C3                                    ret
[ 903]        :                                       draw_z_90 endp
[ 904]        :                                       
[ 905]        :                                       ;\--------------------------------------------------------------------------/
[ 906]        :                                       ;|                            Move Right                                    |
[ 907]        :                                       ;/--------------------------------------------------------------------------\
[ 908]        :                                       
[ 909]    073E:                                       move_right proc         ; PRESS D
[ 910]    073E: C6 06 21 00 00                        mov curr_color, 0   ; set black color (for clearing)
[ 911]        :                                       
[ 912]    0743: 80 3E 1E 00 72                        cmp curr_shape, 'r'
[ 913]    0748: 74 03 E9 B4 00                        jnz r1
[ 914]        :                                       
[ 915]    074D: 83 3E 1F 00 00                        cmp curr_ang,0  ; horizontal line
[ 916]    0752: 75 2B                                 jnz vertical_line_r
[ 917]        :                                       
[ 918]        :                                       ; check right block 1 is empty
[ 919]    0754: 8B 1E 10 00                           mov bx, start_col
[ 920]    0758: 83 C3 10                              add bx, 16
[ 921]    075B: 8B CB                                 mov cx, bx
[ 922]    075D: 8B 16 16 00                           mov dx, start_row
[ 923]    0761: B4 0D                                 mov ah,0Dh      ; get color of the block
[ 924]    0763: CD 10                                 int 10h
[ 925]    0765: 3C 00                                 cmp al,0        ; move if al=0 (black)
[ 926]    0767: 74 03 E9 7C 04                        jnz end_d
[ 927]        :                                       
[ 928]        :                                       ; clear and draw new piece
[ 929]    076C: E8 1A FC                              call draw_line          ; clear previous piece
[ 930]    076F: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[ 931]    0774: 83 06 10 00 04                        add start_col,4         ; go right
[ 932]    0779: E8 0D FC                              call draw_line          ; draw new piece
[ 933]    077C: E9 69 04                              jmp end_d
[ 934]        :                                       
[ 935]    077F:                                       vertical_line_r:
[ 936]        :                                       ; check right block 1 is empty
[ 937]    077F: 8B 1E 10 00                           mov bx, start_col
[ 938]    0783: 83 C3 04                              add bx, 4
[ 939]    0786: 8B CB                                 mov cx, bx
[ 940]    0788: 8B 16 16 00                           mov dx, start_row
[ 941]    078C: B4 0D                                 mov ah,0Dh              ; get color of the block
[ 942]    078E: CD 10                                 int 10h
[ 943]    0790: 3C 00                                 cmp al,0                ; move if al=0 (black)
[ 944]    0792: 74 03 E9 51 04                        jnz end_d
[ 945]        :                                       
[ 946]        :                                       ;check right block 2 is empty
[ 947]    0797: 8B 1E 10 00                           mov bx, start_col
[ 948]    079B: 83 C3 04                              add bx, 4
[ 949]    079E: 8B CB                                 mov cx, bx
[ 950]    07A0: 8B 1E 16 00                           mov bx, start_row
[ 951]    07A4: 83 C3 04                              add bx, 4
[ 952]    07A7: 8B D3                                 mov dx, bx
[ 953]    07A9: B4 0D                                 mov ah,0Dh              ;get color of the block
[ 954]    07AB: CD 10                                 int 10h
[ 955]    07AD: 3C 00                                 cmp al,0                ; move if al=0 (black)
[ 956]    07AF: 74 03 E9 34 04                        jnz end_d
[ 957]        :                                       
[ 958]        :                                       ;check right block 3 is empty
[ 959]    07B4: 8B 1E 10 00                           mov bx, start_col
[ 960]    07B8: 83 C3 04                              add bx, 4
[ 961]    07BB: 8B CB                                 mov cx, bx
[ 962]    07BD: 8B 1E 16 00                           mov bx, start_row
[ 963]    07C1: 83 C3 08                              add bx, 8
[ 964]    07C4: 8B D3                                 mov dx, bx
[ 965]    07C6: B4 0D                                 mov ah,0Dh              ; get color of the block
[ 966]    07C8: CD 10                                 int 10h
[ 967]    07CA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[ 968]    07CC: 74 03 E9 17 04                        jnz end_d
[ 969]        :                                       
[ 970]        :                                       ; check right block 4 is empty
[ 971]    07D1: 8B 1E 10 00                           mov bx, start_col
[ 972]    07D5: 83 C3 04                              add bx, 4
[ 973]    07D8: 8B CB                                 mov cx, bx
[ 974]    07DA: 8B 1E 16 00                           mov bx, start_row
[ 975]    07DE: 83 C3 0C                              add bx, 12
[ 976]    07E1: 8B D3                                 mov dx, bx
[ 977]    07E3: B4 0D                                 mov ah,0Dh              ;get color of the block
[ 978]    07E5: CD 10                                 int 10h
[ 979]    07E7: 3C 00                                 cmp al,0                ; move if al=0 (black)
[ 980]    07E9: 74 03 E9 FA 03                        jnz end_d
[ 981]        :                                       
[ 982]        :                                       ; clear and draw new piece
[ 983]    07EE: E8 D7 FB                              call draw_line_90       ; clear previous piece
[ 984]    07F1: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[ 985]    07F6: 83 06 10 00 04                        add start_col,4         ; go right
[ 986]    07FB: E8 CA FB                              call draw_line_90       ; draw new piece
[ 987]    07FE: E9 E7 03                              jmp end_d
[ 988]        :                                       
[ 989]    0801:                                       r1:
[ 990]    0801: 80 3E 1E 00 74                        cmp curr_shape, 't'
[ 991]    0806: 74 03 E9 70 01                        jnz r2
[ 992]        :                                       
[ 993]    080B: 83 3E 1F 00 00                        cmp curr_ang,0
[ 994]    0810: 75 48                                 jnz t90_r
[ 995]        :                                       
[ 996]        :                                       ; check right block 1 is empty
[ 997]    0812: 8B 1E 10 00                           mov bx, start_col
[ 998]    0816: 83 C3 0C                              add bx, 12
[ 999]    0819: 8B CB                                 mov cx, bx
[1000]    081B: 8B 16 16 00                           mov dx, start_row
[1001]    081F: B4 0D                                 mov ah,0Dh                  ; get color of the block
[1002]    0821: CD 10                                 int 10h
[1003]    0823: 3C 00                                 cmp al,0                    ; move if al=0 (black)
[1004]    0825: 74 03 E9 BE 03                        jnz end_d
[1005]        :                                       
[1006]        :                                       ; check right block 2 is empty
[1007]    082A: 8B 1E 10 00                           mov bx, start_col
[1008]    082E: 83 C3 08                              add bx, 8
[1009]    0831: 8B CB                                 mov cx, bx
[1010]    0833: 8B 1E 16 00                           mov bx, start_row
[1011]    0837: 83 C3 04                              add bx, 4
[1012]    083A: 8B D3                                 mov dx, bx
[1013]    083C: B4 0D                                 mov ah,0Dh                  ; get color of the block
[1014]    083E: CD 10                                 int 10h
[1015]    0840: 3C 00                                 cmp al,0                    ; move if al=0 (black)
[1016]    0842: 74 03 E9 A1 03                        jnz end_d
[1017]        :                                       
[1018]        :                                       ; clear and draw new piece
[1019]    0847: E8 01 FC                              call draw_t                 ; clear previous piece
[1020]    084A: C6 06 21 00 05                        mov curr_color, 05h         ; set purple color
[1021]    084F: 83 06 10 00 04                        add start_col,4             ; go right
[1022]    0854: E8 F4 FB                              call draw_t                 ; draw new piece
[1023]    0857: E9 8E 03                              jmp end_d
[1024]        :                                       
[1025]    085A:                                       t90_r:
[1026]    085A: 83 3E 1F 00 5A                        cmp curr_ang,90
[1027]    085F: 75 65                                 jnz t180_r
[1028]        :                                       
[1029]        :                                       ; check right block 1 is empty
[1030]    0861: 8B 1E 10 00                           mov bx, start_col
[1031]    0865: 83 C3 04                              add bx, 4
[1032]    0868: 8B CB                                 mov cx, bx
[1033]    086A: 8B 16 16 00                           mov dx, start_row
[1034]    086E: B4 0D                                 mov ah,0Dh              ; get color of the block
[1035]    0870: CD 10                                 int 10h
[1036]    0872: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1037]    0874: 74 03 E9 6F 03                        jnz end_d
[1038]        :                                       
[1039]        :                                       ; check right block 2 is empty
[1040]    0879: 8B 1E 10 00                           mov bx, start_col
[1041]    087D: 83 C3 04                              add bx, 4
[1042]    0880: 8B CB                                 mov cx, bx
[1043]    0882: 8B 1E 16 00                           mov bx, start_row
[1044]    0886: 83 C3 04                              add bx, 4
[1045]    0889: 8B D3                                 mov dx, bx
[1046]    088B: B4 0D                                 mov ah,0Dh              ; get color of the block
[1047]    088D: CD 10                                 int 10h
[1048]    088F: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1049]    0891: 74 03 E9 52 03                        jnz end_d
[1050]        :                                       
[1051]        :                                       ; check right block 3 is empty
[1052]    0896: 8B 1E 10 00                           mov bx, start_col
[1053]    089A: 83 C3 04                              add bx, 4
[1054]    089D: 8B CB                                 mov cx, bx
[1055]    089F: 8B 1E 16 00                           mov bx, start_row
[1056]    08A3: 83 C3 08                              add bx, 8
[1057]    08A6: 8B D3                                 mov dx, bx
[1058]    08A8: B4 0D                                 mov ah,0Dh              ; get color of the block
[1059]    08AA: CD 10                                 int 10h
[1060]    08AC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1061]    08AE: 74 03 E9 35 03                        jnz end_d
[1062]        :                                       
[1063]        :                                       ; clear and draw new piece
[1064]    08B3: E8 DF FB                              call draw_t_90          ; clear previous piece
[1065]    08B6: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1066]    08BB: 83 06 10 00 04                        add start_col,4         ; go right
[1067]    08C0: E8 D2 FB                              call draw_t_90          ; draw new piece
[1068]    08C3: E9 22 03                              jmp end_d
[1069]        :                                       
[1070]    08C6:                                       t180_r:
[1071]    08C6: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[1072]    08CC: 75 48                                 jnz t270_r
[1073]        :                                       
[1074]        :                                       ; check right block 1 is empty
[1075]    08CE: 8B 1E 10 00                           mov bx, start_col
[1076]    08D2: 83 C3 04                              add bx, 4
[1077]    08D5: 8B CB                                 mov cx, bx
[1078]    08D7: 8B 16 16 00                           mov dx, start_row
[1079]    08DB: B4 0D                                 mov ah,0Dh              ;get color of the block
[1080]    08DD: CD 10                                 int 10h
[1081]    08DF: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1082]    08E1: 74 03 E9 02 03                        jnz end_d
[1083]        :                                       
[1084]        :                                       ; check right block 2 is empty
[1085]    08E6: 8B 1E 10 00                           mov bx, start_col
[1086]    08EA: 83 C3 08                              add bx, 8
[1087]    08ED: 8B CB                                 mov cx, bx
[1088]    08EF: 8B 1E 16 00                           mov bx, start_row
[1089]    08F3: 83 C3 04                              add bx, 4
[1090]    08F6: 8B D3                                 mov dx, bx
[1091]    08F8: B4 0D                                 mov ah,0Dh              ; get color of the block
[1092]    08FA: CD 10                                 int 10h
[1093]    08FC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1094]    08FE: 74 03 E9 E5 02                        jnz end_d
[1095]        :                                       
[1096]        :                                       ; clear and draw new piece
[1097]    0903: E8 D9 FB                              call draw_t_180         ; clear previous piece
[1098]    0906: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1099]    090B: 83 06 10 00 04                        add start_col,4         ; go right
[1100]    0910: E8 CC FB                              call draw_t_180         ; draw new piece
[1101]    0913: E9 D2 02                              jmp end_d
[1102]        :                                       
[1103]    0916:                                       t270_r:
[1104]        :                                       ; check right block 1 is empty
[1105]    0916: 8B 1E 10 00                           mov bx, start_col
[1106]    091A: 83 C3 04                              add bx, 4
[1107]    091D: 8B CB                                 mov cx, bx
[1108]    091F: 8B 16 16 00                           mov dx, start_row
[1109]    0923: B4 0D                                 mov ah,0Dh              ; get color of the block
[1110]    0925: CD 10                                 int 10h
[1111]    0927: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1112]    0929: 74 03 E9 BA 02                        jnz end_d
[1113]        :                                       
[1114]        :                                       ; check right block 2 is empty
[1115]    092E: 8B 1E 10 00                           mov bx, start_col
[1116]    0932: 83 C3 08                              add bx, 8
[1117]    0935: 8B CB                                 mov cx, bx
[1118]    0937: 8B 1E 16 00                           mov bx, start_row
[1119]    093B: 83 C3 04                              add bx, 4
[1120]    093E: 8B D3                                 mov dx, bx
[1121]    0940: B4 0D                                 mov ah,0Dh              ; get color of the block
[1122]    0942: CD 10                                 int 10h
[1123]    0944: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1124]    0946: 74 03 E9 9D 02                        jnz end_d
[1125]        :                                       
[1126]        :                                       ; check right block 3 is empty
[1127]    094B: 8B 1E 10 00                           mov bx, start_col
[1128]    094F: 83 C3 04                              add bx, 4
[1129]    0952: 8B CB                                 mov cx, bx
[1130]    0954: 8B 1E 16 00                           mov bx, start_row
[1131]    0958: 83 C3 08                              add bx, 8
[1132]    095B: 8B D3                                 mov dx, bx
[1133]    095D: B4 0D                                 mov ah,0Dh              ; get color of the block
[1134]    095F: CD 10                                 int 10h
[1135]    0961: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1136]    0963: 74 03 E9 80 02                        jnz end_d
[1137]        :                                       
[1138]        :                                       ; clear and draw new piece
[1139]    0968: E8 C3 FB                              call draw_t_270         ; clear previous piece
[1140]    096B: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1141]    0970: 83 06 10 00 04                        add start_col,4         ; go right
[1142]    0975: E8 B6 FB                              call draw_t_270         ; draw new piece
[1143]    0978: E9 6D 02                              jmp end_d
[1144]        :                                       
[1145]    097B:                                       r2:
[1146]    097B: 80 3E 1E 00 73                        cmp curr_shape, 's'
[1147]    0980: 75 48                                 jnz r3
[1148]        :                                       
[1149]        :                                       ; check right block 1 is empty
[1150]    0982: 8B 1E 10 00                           mov bx, start_col
[1151]    0986: 83 C3 08                              add bx, 8
[1152]    0989: 8B CB                                 mov cx, bx
[1153]    098B: 8B 16 16 00                           mov dx, start_row
[1154]    098F: B4 0D                                 mov ah,0Dh              ; get color of the block
[1155]    0991: CD 10                                 int 10h
[1156]    0993: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1157]    0995: 74 03 E9 4E 02                        jnz end_d
[1158]        :                                       
[1159]        :                                       ; check right block 2 is empty
[1160]    099A: 8B 1E 10 00                           mov bx, start_col
[1161]    099E: 83 C3 08                              add bx, 8
[1162]    09A1: 8B CB                                 mov cx, bx
[1163]    09A3: 8B 1E 16 00                           mov bx, start_row
[1164]    09A7: 83 C3 04                              add bx, 4
[1165]    09AA: 8B D3                                 mov dx, bx
[1166]    09AC: B4 0D                                 mov ah,0Dh              ; get color of the block
[1167]    09AE: CD 10                                 int 10h
[1168]    09B0: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1169]    09B2: 74 03 E9 31 02                        jnz end_d
[1170]        :                                       
[1171]        :                                       ; clear and draw new piece
[1172]    09B7: E8 4D FA                              call draw_square        ; clear previous piece
[1173]    09BA: C6 06 21 00 0E                        mov curr_color, 0Eh     ; set yellow color
[1174]    09BF: 83 06 10 00 04                        add start_col,4         ; go right
[1175]    09C4: E8 40 FA                              call draw_square        ; draw new piece
[1176]    09C7: E9 1E 02                              jmp end_d
[1177]        :                                       
[1178]    09CA:                                       r3:
[1179]    09CA: 80 3E 1E 00 6C                        cmp curr_shape, 'l'
[1180]    09CF: 74 03 E9 70 01                        jnz r4
[1181]        :                                       
[1182]    09D4: 83 3E 1F 00 00                        cmp curr_ang,0
[1183]    09D9: 75 65                                 jnz l90_r
[1184]        :                                       
[1185]        :                                       ; check right block 1 is empty
[1186]    09DB: 8B 1E 10 00                           mov bx, start_col
[1187]    09DF: 83 C3 04                              add bx, 4
[1188]    09E2: 8B CB                                 mov cx, bx
[1189]    09E4: 8B 16 16 00                           mov dx, start_row
[1190]    09E8: B4 0D                                 mov ah,0Dh              ; get color of the block
[1191]    09EA: CD 10                                 int 10h
[1192]    09EC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1193]    09EE: 74 03 E9 F5 01                        jnz end_d
[1194]        :                                       
[1195]        :                                       ; check right block 2 is empty
[1196]    09F3: 8B 1E 10 00                           mov bx, start_col
[1197]    09F7: 83 C3 04                              add bx, 4
[1198]    09FA: 8B CB                                 mov cx, bx
[1199]    09FC: 8B 1E 16 00                           mov bx, start_row
[1200]    0A00: 83 C3 04                              add bx, 4
[1201]    0A03: 8B D3                                 mov dx, bx
[1202]    0A05: B4 0D                                 mov ah,0Dh              ; get color of the block
[1203]    0A07: CD 10                                 int 10h
[1204]    0A09: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1205]    0A0B: 74 03 E9 D8 01                        jnz end_d
[1206]        :                                       
[1207]        :                                       ; check right block 3 is empty
[1208]    0A10: 8B 1E 10 00                           mov bx, start_col
[1209]    0A14: 83 C3 08                              add bx, 8
[1210]    0A17: 8B CB                                 mov cx, bx
[1211]    0A19: 8B 1E 16 00                           mov bx, start_row
[1212]    0A1D: 83 C3 08                              add bx, 8
[1213]    0A20: 8B D3                                 mov dx, bx
[1214]    0A22: B4 0D                                 mov ah,0Dh              ; get color of the block
[1215]    0A24: CD 10                                 int 10h
[1216]    0A26: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1217]    0A28: 74 03 E9 BB 01                        jnz end_d
[1218]        :                                       
[1219]        :                                       ; clear and draw new piece
[1220]    0A2D: E8 48 FB                              call draw_l             ; clear previous piece
[1221]    0A30: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1222]    0A35: 83 06 10 00 04                        add start_col,4         ; go right
[1223]    0A3A: E8 3B FB                              call draw_l             ; draw new piece
[1224]    0A3D: E9 A8 01                              jmp end_d
[1225]        :                                       
[1226]    0A40:                                       l90_r:
[1227]    0A40: 83 3E 1F 00 5A                        cmp curr_ang,90
[1228]    0A45: 75 48                                 jnz l180_r
[1229]        :                                       
[1230]        :                                       ; check right block 1 is empty
[1231]    0A47: 8B 1E 10 00                           mov bx, start_col
[1232]    0A4B: 83 C3 0C                              add bx, 12
[1233]    0A4E: 8B CB                                 mov cx, bx
[1234]    0A50: 8B 16 16 00                           mov dx, start_row
[1235]    0A54: B4 0D                                 mov ah,0Dh              ; get color of the block
[1236]    0A56: CD 10                                 int 10h
[1237]    0A58: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1238]    0A5A: 74 03 E9 89 01                        jnz end_d
[1239]        :                                       
[1240]        :                                       ; check right block 2 is empty
[1241]    0A5F: 8B 1E 10 00                           mov bx, start_col
[1242]    0A63: 83 C3 04                              add bx, 4
[1243]    0A66: 8B CB                                 mov cx, bx
[1244]    0A68: 8B 1E 16 00                           mov bx, start_row
[1245]    0A6C: 83 C3 04                              add bx, 4
[1246]    0A6F: 8B D3                                 mov dx, bx
[1247]    0A71: B4 0D                                 mov ah,0Dh              ; get color of the block
[1248]    0A73: CD 10                                 int 10h
[1249]    0A75: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1250]    0A77: 74 03 E9 6C 01                        jnz end_d
[1251]        :                                       
[1252]        :                                       ; clear and draw new piece
[1253]    0A7C: E8 43 FB                              call draw_l_90          ; clear previous piece
[1254]    0A7F: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1255]    0A84: 83 06 10 00 04                        add start_col, 4        ; go right
[1256]    0A89: E8 36 FB                              call draw_l_90          ; draw new piece
[1257]    0A8C: E9 59 01                              jmp end_d
[1258]        :                                       
[1259]    0A8F:                                       l180_r:
[1260]    0A8F: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[1261]    0A95: 75 65                                 jnz l270_r
[1262]        :                                       
[1263]        :                                       ; check right block 1 is empty
[1264]    0A97: 8B 1E 10 00                           mov bx, start_col
[1265]    0A9B: 83 C3 08                              add bx, 8
[1266]    0A9E: 8B CB                                 mov cx, bx
[1267]    0AA0: 8B 16 16 00                           mov dx, start_row
[1268]    0AA4: B4 0D                                 mov ah,0Dh              ; get color of the block
[1269]    0AA6: CD 10                                 int 10h
[1270]    0AA8: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1271]    0AAA: 74 03 E9 39 01                        jnz end_d
[1272]        :                                       
[1273]        :                                       ; check right block 2 is empty
[1274]    0AAF: 8B 1E 10 00                           mov bx, start_col
[1275]    0AB3: 83 C3 08                              add bx, 8
[1276]    0AB6: 8B CB                                 mov cx, bx
[1277]    0AB8: 8B 1E 16 00                           mov bx, start_row
[1278]    0ABC: 83 C3 04                              add bx, 4
[1279]    0ABF: 8B D3                                 mov dx, bx
[1280]    0AC1: B4 0D                                 mov ah,0Dh              ; get color of the block
[1281]    0AC3: CD 10                                 int 10h
[1282]    0AC5: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1283]    0AC7: 74 03 E9 1C 01                        jnz end_d
[1284]        :                                       
[1285]        :                                       ; check right block 3 is empty
[1286]    0ACC: 8B 1E 10 00                           mov bx, start_col
[1287]    0AD0: 83 C3 08                              add bx, 8
[1288]    0AD3: 8B CB                                 mov cx, bx
[1289]    0AD5: 8B 1E 16 00                           mov bx, start_row
[1290]    0AD9: 83 C3 08                              add bx, 8
[1291]    0ADC: 8B D3                                 mov dx, bx
[1292]    0ADE: B4 0D                                 mov ah,0Dh              ; get color of the block
[1293]    0AE0: CD 10                                 int 10h
[1294]    0AE2: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1295]    0AE4: 74 03 E9 FF 00                        jnz end_d
[1296]        :                                       
[1297]        :                                       ; clear and draw new piece
[1298]    0AE9: E8 1B FB                              call draw_l_180         ; clear previous piece
[1299]    0AEC: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1300]    0AF1: 83 06 10 00 04                        add start_col, 4        ; go right
[1301]    0AF6: E8 0E FB                              call draw_l_180         ; draw new piece
[1302]    0AF9: E9 EC 00                              jmp end_d
[1303]        :                                       
[1304]    0AFC:                                       l270_r:
[1305]        :                                       ; check right block 1 is empty
[1306]    0AFC: 8B 1E 10 00                           mov bx, start_col
[1307]    0B00: 83 C3 04                              add bx, 4
[1308]    0B03: 8B CB                                 mov cx, bx
[1309]    0B05: 8B 16 16 00                           mov dx, start_row
[1310]    0B09: B4 0D                                 mov ah,0Dh              ; get color of the block
[1311]    0B0B: CD 10                                 int 10h
[1312]    0B0D: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1313]    0B0F: 74 03 E9 D4 00                        jnz end_d
[1314]        :                                       
[1315]        :                                       ; check right block 2 is empty
[1316]    0B14: 8B 1E 10 00                           mov bx, start_col
[1317]    0B18: 83 C3 04                              add bx, 4
[1318]    0B1B: 8B CB                                 mov cx, bx
[1319]    0B1D: 8B 1E 16 00                           mov bx, start_row
[1320]    0B21: 83 C3 04                              add bx, 4
[1321]    0B24: 8B D3                                 mov dx, bx
[1322]    0B26: B4 0D                                 mov ah,0Dh              ; get color of the block
[1323]    0B28: CD 10                                 int 10h
[1324]    0B2A: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1325]    0B2C: 74 03 E9 B7 00                        jnz end_d
[1326]        :                                       
[1327]        :                                       ; clear and draw new piece
[1328]    0B31: E8 22 FB                              call draw_l_270         ; first clear previous shape
[1329]    0B34: C6 06 21 00 0C                        mov curr_color, 0Ch     ; color = orange
[1330]    0B39: 83 06 10 00 04                        add start_col,4         ; go right
[1331]    0B3E: E8 15 FB                              call draw_l_270         ; draw new piece
[1332]    0B41: E9 A4 00                              jmp end_d
[1333]        :                                       
[1334]    0B44:                                       r4: ; case z
[1335]    0B44: 83 3E 1F 00 00                        cmp curr_ang,0
[1336]    0B49: 75 44                                 jnz z90_r
[1337]        :                                       
[1338]        :                                       ; check right block 1 is empty
[1339]    0B4B: 8B 1E 10 00                           mov bx, start_col
[1340]    0B4F: 83 C3 08                              add bx, 8
[1341]    0B52: 8B CB                                 mov cx, bx
[1342]    0B54: 8B 16 16 00                           mov dx, start_row
[1343]    0B58: B4 0D                                 mov ah,0Dh              ; get color of the block
[1344]    0B5A: CD 10                                 int 10h
[1345]    0B5C: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1346]    0B5E: 74 03 E9 85 00                        jnz end_d
[1347]        :                                       
[1348]        :                                       ; check right block 2 is empty
[1349]    0B63: 8B 1E 10 00                           mov bx, start_col
[1350]    0B67: 83 C3 04                              add bx, 4
[1351]    0B6A: 8B CB                                 mov cx, bx
[1352]    0B6C: 8B 1E 16 00                           mov bx, start_row
[1353]    0B70: 83 C3 04                              add bx, 4
[1354]    0B73: 8B D3                                 mov dx, bx
[1355]    0B75: B4 0D                                 mov ah,0Dh              ; get color of the block
[1356]    0B77: CD 10                                 int 10h
[1357]    0B79: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1358]    0B7B: 75 6B                                 jnz end_d
[1359]        :                                       
[1360]        :                                       ; clear and draw new piece
[1361]    0B7D: E8 25 FB                              call draw_z             ; clear previous piece
[1362]    0B80: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[1363]    0B85: 83 06 10 00 04                        add start_col,4         ; go right
[1364]    0B8A: E8 18 FB                              call draw_z             ; draw new piece
[1365]    0B8D: EB 59                                 jmp end_d
[1366]        :                                       
[1367]    0B8F:                                       z90_r:
[1368]        :                                       ; check right block 1 is empty
[1369]    0B8F: 8B 1E 10 00                           mov bx, start_col
[1370]    0B93: 83 C3 04                              add bx, 4
[1371]    0B96: 8B CB                                 mov cx, bx
[1372]    0B98: 8B 16 16 00                           mov dx, start_row
[1373]    0B9C: B4 0D                                 mov ah,0Dh              ; get color of the block
[1374]    0B9E: CD 10                                 int 10h
[1375]    0BA0: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1376]    0BA2: 75 44                                 jnz end_d
[1377]        :                                       
[1378]        :                                       ; check right block 2 is empty
[1379]    0BA4: 8B 1E 10 00                           mov bx, start_col
[1380]    0BA8: 83 C3 08                              add bx, 8
[1381]    0BAB: 8B CB                                 mov cx, bx
[1382]    0BAD: 8B 1E 16 00                           mov bx, start_row
[1383]    0BB1: 83 C3 04                              add bx, 4
[1384]    0BB4: 8B D3                                 mov dx, bx
[1385]    0BB6: B4 0D                                 mov ah,0Dh              ; get color of the block
[1386]    0BB8: CD 10                                 int 10h
[1387]    0BBA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1388]    0BBC: 75 2A                                 jnz end_d
[1389]        :                                       
[1390]        :                                       ; check right block 3 is empty
[1391]    0BBE: 8B 1E 10 00                           mov bx, start_col
[1392]    0BC2: 83 C3 08                              add bx, 8
[1393]    0BC5: 8B CB                                 mov cx, bx
[1394]    0BC7: 8B 1E 16 00                           mov bx, start_row
[1395]    0BCB: 83 C3 08                              add bx, 8
[1396]    0BCE: 8B D3                                 mov dx, bx
[1397]    0BD0: B4 0D                                 mov ah,0Dh              ; get color of the block
[1398]    0BD2: CD 10                                 int 10h
[1399]    0BD4: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1400]    0BD6: 75 10                                 jnz end_d
[1401]        :                                       
[1402]        :                                       ; clear and draw new piece
[1403]    0BD8: E8 14 FB                              call draw_z_90          ; clear previous piece
[1404]    0BDB: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[1405]    0BE0: 83 06 10 00 04                        add start_col,4         ; go right
[1406]    0BE5: E8 07 FB                              call draw_z_90          ; draw new piece
[1407]        :                                       
[1408]    0BE8:                                       end_d:
[1409]    0BE8: C3                                    ret
[1410]        :                                       move_right endp
[1411]        :                                       
[1412]        :                                       ;\--------------------------------------------------------------------------/
[1413]        :                                       ;|                              Move Left                                   |
[1414]        :                                       ;/--------------------------------------------------------------------------\
[1415]        :                                       
[1416]    0BE9:                                       move_left proc					; PRESS A
[1417]    0BE9: C6 06 21 00 00                        mov curr_color, 0           ; set black color (for clearing)
[1418]        :                                       
[1419]    0BEE: 80 3E 1E 00 72                        cmp curr_shape, 'r'
[1420]    0BF3: 74 03 E9 B4 00                        jnz l1
[1421]        :                                       
[1422]    0BF8: 83 3E 1F 00 00                        cmp curr_ang,0          ; horizontal line
[1423]    0BFD: 75 2B                                 jnz vertical_line_l
[1424]        :                                       
[1425]        :                                       ; check left block is empty
[1426]    0BFF: 8B 1E 10 00                           mov bx, start_col
[1427]    0C03: 83 EB 04                              sub bx, 4
[1428]    0C06: 8B CB                                 mov cx, bx
[1429]    0C08: 8B 16 16 00                           mov dx, start_row
[1430]    0C0C: B4 0D                                 mov ah,0Dh              ; get color of the block
[1431]    0C0E: CD 10                                 int 10h
[1432]    0C10: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1433]    0C12: 74 03 E9 6A 04                        jnz end_a
[1434]        :                                       
[1435]        :                                       ; clear and draw new piece
[1436]    0C17: E8 6F F7                              call draw_line          ; clear previous piece
[1437]    0C1A: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[1438]    0C1F: 83 2E 10 00 04                        sub start_col,4         ; go left
[1439]    0C24: E8 62 F7                              call draw_line          ; draw new piece
[1440]    0C27: E9 57 04                              jmp end_a
[1441]        :                                       
[1442]    0C2A:                                       vertical_line_l:
[1443]        :                                       ; check left block 1 is empty
[1444]    0C2A: 8B 1E 10 00                           mov bx, start_col
[1445]    0C2E: 83 EB 04                              sub bx, 4
[1446]    0C31: 8B CB                                 mov cx, bx
[1447]    0C33: 8B 16 16 00                           mov dx, start_row
[1448]    0C37: B4 0D                                 mov ah,0Dh              ; get color of the block
[1449]    0C39: CD 10                                 int 10h
[1450]    0C3B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1451]    0C3D: 74 03 E9 3F 04                        jnz end_a
[1452]        :                                       
[1453]        :                                       ; check left block 2 is empty
[1454]    0C42: 8B 1E 10 00                           mov bx, start_col
[1455]    0C46: 83 EB 04                              sub bx, 4
[1456]    0C49: 8B CB                                 mov cx, bx
[1457]    0C4B: 8B 1E 16 00                           mov bx, start_row
[1458]    0C4F: 83 C3 04                              add bx, 4
[1459]    0C52: 8B D3                                 mov dx, bx
[1460]    0C54: B4 0D                                 mov ah,0Dh              ; get color of the block
[1461]    0C56: CD 10                                 int 10h
[1462]    0C58: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1463]    0C5A: 74 03 E9 22 04                        jnz end_a
[1464]        :                                       
[1465]        :                                       ; check left block 3 is empty
[1466]    0C5F: 8B 1E 10 00                           mov bx, start_col
[1467]    0C63: 83 EB 04                              sub bx, 4
[1468]    0C66: 8B CB                                 mov cx, bx
[1469]    0C68: 8B 1E 16 00                           mov bx, start_row
[1470]    0C6C: 83 C3 08                              add bx, 8
[1471]    0C6F: 8B D3                                 mov dx, bx
[1472]    0C71: B4 0D                                 mov ah,0Dh              ; get color of the block
[1473]    0C73: CD 10                                 int 10h
[1474]    0C75: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1475]    0C77: 74 03 E9 05 04                        jnz end_a
[1476]        :                                       
[1477]        :                                       ; check left block 4 is empty
[1478]    0C7C: 8B 1E 10 00                           mov bx, start_col
[1479]    0C80: 83 EB 04                              sub bx, 4
[1480]    0C83: 8B CB                                 mov cx, bx
[1481]    0C85: 8B 1E 16 00                           mov bx, start_row
[1482]    0C89: 83 C3 0C                              add bx, 12
[1483]    0C8C: 8B D3                                 mov dx, bx
[1484]    0C8E: B4 0D                                 mov ah,0Dh              ; get color of the block
[1485]    0C90: CD 10                                 int 10h
[1486]    0C92: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1487]    0C94: 74 03 E9 E8 03                        jnz end_a
[1488]        :                                       
[1489]        :                                       ; clear and draw new piece
[1490]    0C99: E8 2C F7                              call draw_line_90       ; clear previous piece
[1491]    0C9C: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[1492]    0CA1: 83 2E 10 00 04                        sub start_col,4         ; go left
[1493]    0CA6: E8 1F F7                              call draw_line_90       ; draw new piece
[1494]    0CA9: E9 D5 03                              jmp end_a
[1495]        :                                       
[1496]    0CAC:                                       l1:
[1497]    0CAC: 80 3E 1E 00 74                        cmp curr_shape, 't'
[1498]    0CB1: 74 03 E9 6B 01                        jnz l2
[1499]        :                                       
[1500]    0CB6: 83 3E 1F 00 00                        cmp curr_ang,0
[1501]    0CBB: 75 43                                 jnz t90_l
[1502]        :                                       
[1503]        :                                       ; check left block 1 is empty
[1504]    0CBD: 8B 1E 10 00                           mov bx, start_col
[1505]    0CC1: 83 EB 04                              sub bx, 4
[1506]    0CC4: 8B CB                                 mov cx, bx
[1507]    0CC6: 8B 16 16 00                           mov dx, start_row
[1508]    0CCA: B4 0D                                 mov ah,0Dh              ; get color of the block
[1509]    0CCC: CD 10                                 int 10h
[1510]    0CCE: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1511]    0CD0: 74 03 E9 AC 03                        jnz end_a
[1512]        :                                       
[1513]        :                                       ; check left block 2 is empty
[1514]    0CD5: 8B 0E 10 00                           mov cx, start_col
[1515]    0CD9: 8B 1E 16 00                           mov bx, start_row
[1516]    0CDD: 83 C3 04                              add bx, 4
[1517]    0CE0: 8B D3                                 mov dx, bx
[1518]    0CE2: B4 0D                                 mov ah,0Dh              ; get color of the block
[1519]    0CE4: CD 10                                 int 10h
[1520]    0CE6: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1521]    0CE8: 74 03 E9 94 03                        jnz end_a
[1522]        :                                       
[1523]        :                                       ; clear and draw new piece
[1524]    0CED: E8 5B F7                              call draw_t             ; clear previous piece
[1525]    0CF0: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1526]    0CF5: 83 2E 10 00 04                        sub start_col,4         ; go left
[1527]    0CFA: E8 4E F7                              call draw_t             ; draw new piece
[1528]    0CFD: E9 81 03                              jmp end_a
[1529]        :                                       
[1530]    0D00:                                       t90_l:
[1531]    0D00: 83 3E 1F 00 5A                        cmp curr_ang,90
[1532]    0D05: 75 65                                 jnz t180_l
[1533]        :                                       
[1534]        :                                       ; check left block 1 is empty
[1535]    0D07: 8B 1E 10 00                           mov bx, start_col
[1536]    0D0B: 83 EB 04                              sub bx, 4
[1537]    0D0E: 8B CB                                 mov cx, bx
[1538]    0D10: 8B 16 16 00                           mov dx, start_row
[1539]    0D14: B4 0D                                 mov ah,0Dh              ; get color of the block
[1540]    0D16: CD 10                                 int 10h
[1541]    0D18: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1542]    0D1A: 74 03 E9 62 03                        jnz end_a
[1543]        :                                       
[1544]        :                                       ; check left block 2 is empty
[1545]    0D1F: 8B 1E 10 00                           mov bx, start_col
[1546]    0D23: 83 EB 08                              sub bx, 8
[1547]    0D26: 8B CB                                 mov cx, bx
[1548]    0D28: 8B 1E 16 00                           mov bx, start_row
[1549]    0D2C: 83 C3 04                              add bx, 4
[1550]    0D2F: 8B D3                                 mov dx, bx
[1551]    0D31: B4 0D                                 mov ah,0Dh              ; get color of the block
[1552]    0D33: CD 10                                 int 10h
[1553]    0D35: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1554]    0D37: 74 03 E9 45 03                        jnz end_a
[1555]        :                                       
[1556]        :                                       ; check left block 3 is empty
[1557]    0D3C: 8B 1E 10 00                           mov bx, start_col
[1558]    0D40: 83 EB 04                              sub bx, 4
[1559]    0D43: 8B CB                                 mov cx, bx
[1560]    0D45: 8B 1E 16 00                           mov bx, start_row
[1561]    0D49: 83 C3 08                              add bx, 8
[1562]    0D4C: 8B D3                                 mov dx, bx
[1563]    0D4E: B4 0D                                 mov ah,0Dh              ; get color of the block
[1564]    0D50: CD 10                                 int 10h
[1565]    0D52: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1566]    0D54: 74 03 E9 28 03                        jnz end_a
[1567]        :                                       
[1568]        :                                       ; clear and draw new piece
[1569]    0D59: E8 39 F7                              call draw_t_90          ; clear previous piece
[1570]    0D5C: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1571]    0D61: 83 2E 10 00 04                        sub start_col,4         ; go left
[1572]    0D66: E8 2C F7                              call draw_t_90          ; draw new piece
[1573]    0D69: E9 15 03                              jmp end_a
[1574]        :                                       
[1575]    0D6C:                                       t180_l:
[1576]    0D6C: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[1577]    0D72: 75 48                                 jnz t270_l
[1578]        :                                       
[1579]        :                                       ; check left block 1 is empty
[1580]    0D74: 8B 1E 10 00                           mov bx, start_col
[1581]    0D78: 83 EB 04                              sub bx, 4
[1582]    0D7B: 8B CB                                 mov cx, bx
[1583]    0D7D: 8B 16 16 00                           mov dx, start_row
[1584]    0D81: B4 0D                                 mov ah,0Dh              ; get color of the block
[1585]    0D83: CD 10                                 int 10h
[1586]    0D85: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1587]    0D87: 74 03 E9 F5 02                        jnz end_a
[1588]        :                                       
[1589]        :                                       ; check left block 2 is empty
[1590]    0D8C: 8B 1E 10 00                           mov bx, start_col
[1591]    0D90: 83 EB 08                              sub bx, 8
[1592]    0D93: 8B CB                                 mov cx, bx
[1593]    0D95: 8B 1E 16 00                           mov bx, start_row
[1594]    0D99: 83 C3 04                              add bx, 4
[1595]    0D9C: 8B D3                                 mov dx, bx              ; get color of the block
[1596]    0D9E: B4 0D                                 mov ah,0Dh
[1597]    0DA0: CD 10                                 int 10h
[1598]    0DA2: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1599]    0DA4: 74 03 E9 D8 02                        jnz end_a
[1600]        :                                       
[1601]        :                                       ; clear and draw new piece
[1602]    0DA9: E8 33 F7                              call draw_t_180         ; clear previous piece
[1603]    0DAC: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1604]    0DB1: 83 2E 10 00 04                        sub start_col,4         ; go left
[1605]    0DB6: E8 26 F7                              call draw_t_180         ; draw new piece
[1606]    0DB9: E9 C5 02                              jmp end_a
[1607]        :                                       
[1608]    0DBC:                                       t270_l:
[1609]        :                                       ; check left block 1 is empty
[1610]    0DBC: 8B 1E 10 00                           mov bx, start_col
[1611]    0DC0: 83 EB 04                              sub bx, 4
[1612]    0DC3: 8B CB                                 mov cx, bx
[1613]    0DC5: 8B 16 16 00                           mov dx, start_row
[1614]    0DC9: B4 0D                                 mov ah,0Dh              ; get color of the block
[1615]    0DCB: CD 10                                 int 10h
[1616]    0DCD: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1617]    0DCF: 74 03 E9 AD 02                        jnz end_a
[1618]        :                                       
[1619]        :                                       ; check left block 2 is empty
[1620]    0DD4: 8B 1E 10 00                           mov bx, start_col
[1621]    0DD8: 83 EB 04                              sub bx, 4
[1622]    0DDB: 8B CB                                 mov cx, bx
[1623]    0DDD: 8B 1E 16 00                           mov bx, start_row
[1624]    0DE1: 83 C3 04                              add bx, 4
[1625]    0DE4: 8B D3                                 mov dx, bx
[1626]    0DE6: B4 0D                                 mov ah,0Dh              ; get color of the block
[1627]    0DE8: CD 10                                 int 10h
[1628]    0DEA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1629]    0DEC: 74 03 E9 90 02                        jnz end_a
[1630]        :                                       
[1631]        :                                       ; check left block 3 is empty
[1632]    0DF1: 8B 1E 10 00                           mov bx, start_col
[1633]    0DF5: 83 EB 04                              sub bx, 4
[1634]    0DF8: 8B CB                                 mov cx, bx
[1635]    0DFA: 8B 1E 16 00                           mov bx, start_row
[1636]    0DFE: 83 C3 08                              add bx, 8
[1637]    0E01: 8B D3                                 mov dx, bx
[1638]    0E03: B4 0D                                 mov ah,0Dh              ; get color of the block
[1639]    0E05: CD 10                                 int 10h
[1640]    0E07: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1641]    0E09: 74 03 E9 73 02                        jnz end_a
[1642]        :                                       
[1643]        :                                       ; clear and draw new piece
[1644]    0E0E: E8 1D F7                              call draw_t_270         ; clear previous piece
[1645]    0E11: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1646]    0E16: 83 2E 10 00 04                        sub start_col,4         ; go left
[1647]    0E1B: E8 10 F7                              call draw_t_270         ; draw new piece
[1648]    0E1E: E9 60 02                              jmp end_a
[1649]        :                                       
[1650]    0E21:                                       l2:
[1651]    0E21: 80 3E 1E 00 73                        cmp curr_shape, 's'
[1652]    0E26: 75 48                                 jnz l3
[1653]        :                                       
[1654]        :                                       ; check left block 1 is empty
[1655]    0E28: 8B 1E 10 00                           mov bx, start_col
[1656]    0E2C: 83 EB 04                              sub bx, 4
[1657]    0E2F: 8B CB                                 mov cx, bx
[1658]    0E31: 8B 16 16 00                           mov dx, start_row
[1659]    0E35: B4 0D                                 mov ah,0Dh                  ; get color of the block
[1660]    0E37: CD 10                                 int 10h
[1661]    0E39: 3C 00                                 cmp al,0                    ; move if al=0 (black)
[1662]    0E3B: 74 03 E9 41 02                        jnz end_a
[1663]        :                                       
[1664]        :                                       ; check left block 2 is empty
[1665]    0E40: 8B 1E 10 00                           mov bx, start_col
[1666]    0E44: 83 EB 04                              sub bx, 4
[1667]    0E47: 8B CB                                 mov cx, bx
[1668]    0E49: 8B 1E 16 00                           mov bx, start_row
[1669]    0E4D: 83 C3 04                              add bx, 4
[1670]    0E50: 8B D3                                 mov dx, bx
[1671]    0E52: B4 0D                                 mov ah,0Dh                  ; get color of the block
[1672]    0E54: CD 10                                 int 10h
[1673]    0E56: 3C 00                                 cmp al,0                    ; move if al=0 (black)
[1674]    0E58: 74 03 E9 24 02                        jnz end_a
[1675]        :                                       
[1676]        :                                       ; clear and draw new piece
[1677]    0E5D: E8 A7 F5                              call draw_square            ; clear previous piece
[1678]    0E60: C6 06 21 00 0E                        mov curr_color, 0Eh         ; set yellow color
[1679]    0E65: 83 2E 10 00 04                        sub start_col,4             ; go left
[1680]    0E6A: E8 9A F5                              call draw_square            ; draw new piece
[1681]    0E6D: E9 11 02                              jmp end_a
[1682]        :                                       
[1683]    0E70:                                       l3:
[1684]    0E70: 80 3E 1E 00 6C                        cmp curr_shape, 'l'
[1685]    0E75: 74 03 E9 66 01                        jnz l4
[1686]        :                                       
[1687]    0E7A: 83 3E 1F 00 00                        cmp curr_ang,0
[1688]    0E7F: 75 65                                 jnz l90_l
[1689]        :                                       
[1690]        :                                       ; check left  block 1 is empty
[1691]    0E81: 8B 1E 10 00                           mov bx, start_col
[1692]    0E85: 83 EB 04                              sub bx, 4
[1693]    0E88: 8B CB                                 mov cx, bx
[1694]    0E8A: 8B 16 16 00                           mov dx, start_row
[1695]    0E8E: B4 0D                                 mov ah,0Dh              ; get color of the block
[1696]    0E90: CD 10                                 int 10h
[1697]    0E92: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1698]    0E94: 74 03 E9 E8 01                        jnz end_a
[1699]        :                                       
[1700]        :                                       ; check left block 2 is empty
[1701]    0E99: 8B 1E 10 00                           mov bx, start_col
[1702]    0E9D: 83 EB 04                              sub bx, 4
[1703]    0EA0: 8B CB                                 mov cx, bx
[1704]    0EA2: 8B 1E 16 00                           mov bx, start_row
[1705]    0EA6: 83 C3 04                              add bx, 4
[1706]    0EA9: 8B D3                                 mov dx, bx
[1707]    0EAB: B4 0D                                 mov ah,0Dh              ; get color of the block
[1708]    0EAD: CD 10                                 int 10h
[1709]    0EAF: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1710]    0EB1: 74 03 E9 CB 01                        jnz end_a
[1711]        :                                       
[1712]        :                                       ; check left block 3 is empty
[1713]    0EB6: 8B 1E 10 00                           mov bx, start_col
[1714]    0EBA: 83 EB 04                              sub bx, 4
[1715]    0EBD: 8B CB                                 mov cx, bx
[1716]    0EBF: 8B 1E 16 00                           mov bx, start_row
[1717]    0EC3: 83 C3 08                              add bx, 8
[1718]    0EC6: 8B D3                                 mov dx, bx
[1719]    0EC8: B4 0D                                 mov ah,0Dh              ; get color of the block
[1720]    0ECA: CD 10                                 int 10h
[1721]    0ECC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1722]    0ECE: 74 03 E9 AE 01                        jnz end_a
[1723]        :                                       
[1724]        :                                       ; clear and draw new piece
[1725]    0ED3: E8 A2 F6                              call draw_l             ; clear previous piece
[1726]    0ED6: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1727]    0EDB: 83 2E 10 00 04                        sub start_col,4         ; go left
[1728]    0EE0: E8 95 F6                              call draw_l             ; draw new piece
[1729]    0EE3: E9 9B 01                              jmp end_a
[1730]        :                                       
[1731]    0EE6:                                       l90_l:
[1732]    0EE6: 83 3E 1F 00 5A                        cmp curr_ang,90
[1733]    0EEB: 75 48                                 jnz l180_l
[1734]        :                                       
[1735]        :                                       ; check left block 1 is empty
[1736]    0EED: 8B 1E 10 00                           mov bx, start_col
[1737]    0EF1: 83 EB 04                              sub bx, 4
[1738]    0EF4: 8B CB                                 mov cx, bx
[1739]    0EF6: 8B 16 16 00                           mov dx, start_row
[1740]    0EFA: B4 0D                                 mov ah,0Dh              ; get color of the block
[1741]    0EFC: CD 10                                 int 10h
[1742]    0EFE: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1743]    0F00: 74 03 E9 7C 01                        jnz end_a
[1744]        :                                       
[1745]        :                                       ; check left block 2 is empty
[1746]    0F05: 8B 1E 10 00                           mov bx, start_col
[1747]    0F09: 83 EB 04                              sub bx, 4
[1748]    0F0C: 8B CB                                 mov cx, bx
[1749]    0F0E: 8B 1E 16 00                           mov bx, start_row
[1750]    0F12: 83 C3 04                              add bx, 4
[1751]    0F15: 8B D3                                 mov dx, bx
[1752]    0F17: B4 0D                                 mov ah,0Dh              ; get color of the block
[1753]    0F19: CD 10                                 int 10h
[1754]    0F1B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1755]    0F1D: 74 03 E9 5F 01                        jnz end_a
[1756]        :                                       
[1757]        :                                       ; clear and draw new piece
[1758]    0F22: E8 9D F6                              call draw_l_90          ; clear previous piece
[1759]    0F25: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1760]    0F2A: 83 2E 10 00 04                        sub start_col, 4        ; go left
[1761]    0F2F: E8 90 F6                              call draw_l_90          ; draw new piece
[1762]    0F32: E9 4C 01                              jmp end_a
[1763]        :                                       
[1764]    0F35:                                       l180_l:
[1765]    0F35: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[1766]    0F3B: 75 5B                                 jnz l270_l
[1767]        :                                       
[1768]        :                                       ; check left block 1 is empty
[1769]    0F3D: 8B 1E 10 00                           mov bx, start_col
[1770]    0F41: 83 EB 04                              sub bx, 4
[1771]    0F44: 8B CB                                 mov cx, bx
[1772]    0F46: 8B 16 16 00                           mov dx, start_row
[1773]    0F4A: B4 0D                                 mov ah,0Dh              ; get color of the block
[1774]    0F4C: CD 10                                 int 10h
[1775]    0F4E: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1776]    0F50: 74 03 E9 2C 01                        jnz end_a
[1777]        :                                       
[1778]        :                                       ; check left block 2 is empty
[1779]    0F55: 8B 0E 10 00                           mov cx, start_col
[1780]    0F59: 8B 1E 16 00                           mov bx, start_row
[1781]    0F5D: 83 C3 04                              add bx, 4
[1782]    0F60: 8B D3                                 mov dx, bx
[1783]    0F62: B4 0D                                 mov ah,0Dh              ; get color of the block
[1784]    0F64: CD 10                                 int 10h
[1785]    0F66: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1786]    0F68: 74 03 E9 14 01                        jnz end_a
[1787]        :                                       
[1788]        :                                       ; check left block 3 is empty
[1789]    0F6D: 8B 0E 10 00                           mov cx, start_col
[1790]    0F71: 8B 1E 16 00                           mov bx, start_row
[1791]    0F75: 83 C3 08                              add bx, 8
[1792]    0F78: 8B D3                                 mov dx, bx
[1793]    0F7A: B4 0D                                 mov ah,0Dh              ; get color of the block
[1794]    0F7C: CD 10                                 int 10h
[1795]    0F7E: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1796]    0F80: 74 03 E9 FC 00                        jnz end_a
[1797]        :                                       
[1798]        :                                       ; clear and draw new piece
[1799]    0F85: E8 7F F6                              call draw_l_180         ; clear previous piece
[1800]    0F88: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1801]    0F8D: 83 2E 10 00 04                        sub start_col, 4        ; go left
[1802]    0F92: E8 72 F6                              call draw_l_180         ; draw new piece
[1803]    0F95: E9 E9 00                              jmp end_a
[1804]        :                                       
[1805]    0F98:                                       l270_l:
[1806]        :                                       ; check left block 1 is empty
[1807]    0F98: 8B 1E 10 00                           mov bx, start_col
[1808]    0F9C: 83 EB 04                              sub bx, 4
[1809]    0F9F: 8B CB                                 mov cx, bx
[1810]    0FA1: 8B 16 16 00                           mov dx, start_row
[1811]    0FA5: B4 0D                                 mov ah,0Dh              ; get color of the block
[1812]    0FA7: CD 10                                 int 10h
[1813]    0FA9: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1814]    0FAB: 74 03 E9 D1 00                        jnz end_a
[1815]        :                                       
[1816]        :                                       ; check left block 2 is empty
[1817]    0FB0: 8B 1E 10 00                           mov bx, start_col
[1818]    0FB4: 83 EB 0C                              sub bx, 12
[1819]    0FB7: 8B CB                                 mov cx, bx
[1820]    0FB9: 8B 1E 16 00                           mov bx, start_row
[1821]    0FBD: 83 C3 04                              add bx, 4
[1822]    0FC0: 8B D3                                 mov dx, bx
[1823]    0FC2: B4 0D                                 mov ah,0Dh              ; get color of the block
[1824]    0FC4: CD 10                                 int 10h
[1825]    0FC6: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1826]    0FC8: 74 03 E9 B4 00                        jnz end_a
[1827]        :                                       
[1828]        :                                       ; clear and draw new piece
[1829]    0FCD: E8 86 F6                              call draw_l_270         ; clear previous piece
[1830]    0FD0: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[1831]    0FD5: 83 2E 10 00 04                        sub start_col,4         ; go left
[1832]    0FDA: E8 79 F6                              call draw_l_270         ; draw new piece
[1833]    0FDD: E9 A1 00                              jmp end_a
[1834]        :                                       
[1835]    0FE0:                                       l4: ; case z
[1836]        :                                       
[1837]    0FE0: 83 3E 1F 00 00                        cmp curr_ang,0
[1838]    0FE5: 75 44                                 jnz z90_l
[1839]        :                                       
[1840]        :                                       ; check left block 1 is empty
[1841]    0FE7: 8B 1E 10 00                           mov bx, start_col
[1842]    0FEB: 83 EB 04                              sub bx, 4
[1843]    0FEE: 8B CB                                 mov cx, bx
[1844]    0FF0: 8B 16 16 00                           mov dx, start_row
[1845]    0FF4: B4 0D                                 mov ah,0Dh              ; get color of the block
[1846]    0FF6: CD 10                                 int 10h
[1847]    0FF8: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1848]    0FFA: 74 03 E9 82 00                        jnz end_a
[1849]        :                                       
[1850]        :                                       ; check left block 2 is empty
[1851]    0FFF: 8B 1E 10 00                           mov bx, start_col
[1852]    1003: 83 EB 08                              sub bx, 8
[1853]    1006: 8B CB                                 mov cx, bx
[1854]    1008: 8B 1E 16 00                           mov bx, start_row
[1855]    100C: 83 C3 04                              add bx, 4
[1856]    100F: 8B D3                                 mov dx, bx
[1857]    1011: B4 0D                                 mov ah,0Dh              ; get color of the block
[1858]    1013: CD 10                                 int 10h
[1859]    1015: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1860]    1017: 75 68                                 jnz end_a
[1861]        :                                       
[1862]        :                                       ; clear and draw new piece
[1863]    1019: E8 89 F6                              call draw_z             ; clear previous piece
[1864]    101C: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[1865]    1021: 83 2E 10 00 04                        sub start_col,4         ; go left
[1866]    1026: E8 7C F6                              call draw_z             ; draw new piece
[1867]    1029: EB 56                                 jmp end_a
[1868]        :                                       
[1869]    102B:                                       z90_l:
[1870]        :                                       ; check right block 1 is empty
[1871]    102B: 8B 1E 10 00                           mov bx, start_col
[1872]    102F: 83 EB 04                              sub bx, 4
[1873]    1032: 8B CB                                 mov cx, bx
[1874]    1034: 8B 16 16 00                           mov dx, start_row
[1875]    1038: B4 0D                                 mov ah,0Dh              ; get color of the block
[1876]    103A: CD 10                                 int 10h
[1877]    103C: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1878]    103E: 75 41                                 jnz end_a
[1879]        :                                       
[1880]        :                                       ; check right block 2 is empty
[1881]    1040: 8B 1E 10 00                           mov bx, start_col
[1882]    1044: 83 EB 04                              sub bx, 4
[1883]    1047: 8B CB                                 mov cx, bx
[1884]    1049: 8B 1E 16 00                           mov bx, start_row
[1885]    104D: 83 C3 04                              add bx, 4
[1886]    1050: 8B D3                                 mov dx, bx
[1887]    1052: B4 0D                                 mov ah,0Dh              ; get color of the block
[1888]    1054: CD 10                                 int 10h
[1889]    1056: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1890]    1058: 75 27                                 jnz end_a
[1891]        :                                       
[1892]        :                                       ; check right block 3 is empty
[1893]    105A: 8B 0E 10 00                           mov cx, start_col
[1894]    105E: 8B 1E 16 00                           mov bx, start_row
[1895]    1062: 83 C3 08                              add bx, 8
[1896]    1065: 8B D3                                 mov dx, bx
[1897]    1067: B4 0D                                 mov ah,0Dh              ; get color of the block
[1898]    1069: CD 10                                 int 10h
[1899]    106B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[1900]    106D: 75 12                                 jnz end_a
[1901]        :                                       
[1902]        :                                       ; clear and draw new piece
[1903]    106F: E8 7D F6                              call draw_z_90          ; clear previous piece
[1904]    1072: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[1905]    1077: 83 2E 10 00 04                        sub start_col,4         ; go left
[1906]    107C: E8 70 F6                              call draw_z_90          ; draw new piece
[1907]    107F: EB 00                                 jmp end_a
[1908]        :                                       
[1909]    1081:                                       end_a:
[1910]    1081: C3                                    ret
[1911]        :                                       move_left endp
[1912]        :                                       
[1913]        :                                       ;\--------------------------------------------------------------------------/
[1914]        :                                       ;|                             Move Down                                    |
[1915]        :                                       ;/--------------------------------------------------------------------------\
[1916]        :                                       
[1917]    1082:                                       move_down proc          		; PRESS S
[1918]    1082: C6 06 21 00 00                        mov curr_color, 0   		; set black color (for clearing)
[1919]        :                                       
[1920]    1087: 80 3E 1E 00 72                        cmp curr_shape, 'r'
[1921]    108C: 75 2D                                 jnz d1
[1922]        :                                       
[1923]    108E: 83 3E 1F 00 00                        cmp curr_ang,0  		; horizontal line
[1924]    1093: 75 13                                 jnz vertical_line
[1925]        :                                       
[1926]        :                                       ; clear and draw new piece
[1927]    1095: E8 F1 F2                              call draw_line          ; clear previous piece
[1928]    1098: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[1929]    109D: 83 06 16 00 04                        add start_row,4         ; go down
[1930]    10A2: E8 E4 F2                              call draw_line          ; draw new piece
[1931]    10A5: E9 26 01                              jmp end_s
[1932]        :                                       
[1933]    10A8:                                       vertical_line:
[1934]        :                                       ; clear and draw new piece
[1935]    10A8: E8 1D F3                              call draw_line_90       ; clear previous piece
[1936]    10AB: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[1937]    10B0: 83 06 16 00 04                        add start_row,4         ; go down
[1938]    10B5: E8 10 F3                              call draw_line_90       ; draw new piece
[1939]    10B8: E9 13 01                              jmp end_s
[1940]        :                                       
[1941]    10BB:                                       d1:
[1942]    10BB: 80 3E 1E 00 74                        cmp curr_shape, 't'
[1943]    10C0: 75 62                                 jnz d2
[1944]        :                                       
[1945]    10C2: 83 3E 1F 00 00                        cmp curr_ang,0
[1946]    10C7: 75 13                                 jnz t90
[1947]        :                                       
[1948]        :                                       ; clear and draw new piece
[1949]    10C9: E8 7F F3                              call draw_t             ; clear previous piece
[1950]    10CC: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1951]    10D1: 83 06 16 00 04                        add start_row,4         ; go down
[1952]    10D6: E8 72 F3                              call draw_t             ; draw new piece
[1953]    10D9: E9 F2 00                              jmp end_s
[1954]        :                                       
[1955]    10DC:                                       t90:
[1956]    10DC: 83 3E 1F 00 5A                        cmp curr_ang,90
[1957]    10E1: 75 13                                 jnz t180
[1958]        :                                       
[1959]        :                                       ; clear and draw new piece
[1960]    10E3: E8 AF F3                              call draw_t_90          ; clear previous piece
[1961]    10E6: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1962]    10EB: 83 06 16 00 04                        add start_row,4         ; go down
[1963]    10F0: E8 A2 F3                              call draw_t_90          ; draw new piece
[1964]    10F3: E9 D8 00                              jmp end_s
[1965]        :                                       
[1966]    10F6:                                       t180:
[1967]    10F6: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[1968]    10FC: 75 13                                 jnz t270
[1969]        :                                       
[1970]        :                                       ; clear and draw new piece
[1971]    10FE: E8 DE F3                              call draw_t_180         ; clear previous piece
[1972]    1101: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1973]    1106: 83 06 16 00 04                        add start_row,4         ; go down
[1974]    110B: E8 D1 F3                              call draw_t_180         ; draw new piece
[1975]    110E: E9 BD 00                              jmp end_s
[1976]        :                                       
[1977]    1111:                                       t270:
[1978]        :                                       ; clear and draw new piece
[1979]    1111: E8 1A F4                              call draw_t_270         ; clear previous piece
[1980]    1114: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[1981]    1119: 83 06 16 00 04                        add start_row,4         ; go down
[1982]    111E: E8 0D F4                              call draw_t_270         ; draw new piece
[1983]    1121: E9 AA 00                              jmp end_s
[1984]        :                                       
[1985]    1124:                                       d2:
[1986]    1124: 80 3E 1E 00 73                        cmp curr_shape, 's'
[1987]    1129: 75 13                                 jnz d3
[1988]        :                                       
[1989]        :                                       ; clear and draw new piece
[1990]    112B: E8 D9 F2                              call draw_square        ; clear previous piece
[1991]    112E: C6 06 21 00 0E                        mov curr_color, 0Eh     ; set yellow color
[1992]    1133: 83 06 16 00 04                        add start_row,4         ; go down
[1993]    1138: E8 CC F2                              call draw_square        ; draw new piece
[1994]    113B: E9 90 00                              jmp end_s
[1995]        :                                       
[1996]    113E:                                       d3:
[1997]    113E: 80 3E 1E 00 6C                        cmp curr_shape, 'l'
[1998]    1143: 75 5E                                 jnz d4
[1999]        :                                       
[2000]    1145: 83 3E 1F 00 00                        cmp curr_ang,0
[2001]    114A: 75 12                                 jnz l90
[2002]        :                                       
[2003]        :                                       ; clear and draw new piece
[2004]    114C: E8 29 F4                              call draw_l             ; clear previous piece
[2005]    114F: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2006]    1154: 83 06 16 00 04                        add start_row,4         ; go down
[2007]    1159: E8 1C F4                              call draw_l             ; draw new piece
[2008]    115C: EB 70                                 jmp end_s
[2009]        :                                       
[2010]    115E:                                       l90:
[2011]    115E: 83 3E 1F 00 5A                        cmp curr_ang,90
[2012]    1163: 75 12                                 jnz l180
[2013]        :                                       
[2014]        :                                       ; clear and draw new piece
[2015]    1165: E8 5A F4                              call draw_l_90          ; clear previous piece
[2016]    1168: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2017]    116D: 83 06 16 00 04                        add start_row,4         ; go down
[2018]    1172: E8 4D F4                              call draw_l_90          ; draw new piece
[2019]    1175: EB 57                                 jmp end_s
[2020]        :                                       
[2021]    1177:                                       l180:
[2022]    1177: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[2023]    117D: 75 12                                 jnz l270
[2024]        :                                       
[2025]        :                                       ; clear and draw new piece
[2026]    117F: E8 85 F4                              call draw_l_180         ; clear previous piece
[2027]    1182: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2028]    1187: 83 06 16 00 04                        add start_row,4         ; go down
[2029]    118C: E8 78 F4                              call draw_l_180         ; draw new piece
[2030]    118F: EB 3D                                 jmp end_s
[2031]        :                                       
[2032]    1191:                                       l270:
[2033]        :                                       ; clear and draw new piece
[2034]    1191: E8 C2 F4                              call draw_l_270         ; clear previous piece
[2035]    1194: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2036]    1199: 83 06 16 00 04                        add start_row,4         ; go down
[2037]    119E: E8 B5 F4                              call draw_l_270         ; draw new piece
[2038]    11A1: EB 2B                                 jmp end_s
[2039]        :                                       
[2040]    11A3:                                       d4: ; case z
[2041]        :                                       
[2042]    11A3: 83 3E 1F 00 00                        cmp curr_ang,0
[2043]    11A8: 75 12                                 jnz z90
[2044]        :                                       
[2045]        :                                       ; clear and draw new piece
[2046]    11AA: E8 F8 F4                              call draw_z             ; clear previous piece
[2047]    11AD: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[2048]    11B2: 83 06 16 00 04                        add start_row,4         ; go down
[2049]    11B7: E8 EB F4                              call draw_z             ; draw new piece
[2050]    11BA: EB 12                                 jmp end_s
[2051]        :                                       
[2052]    11BC:                                       z90:
[2053]        :                                       ; clear and draw new piece
[2054]    11BC: E8 30 F5                              call draw_z_90          ; clear previous piece
[2055]    11BF: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[2056]    11C4: 83 06 16 00 04                        add start_row,4         ; go down
[2057]    11C9: E8 23 F5                              call draw_z_90          ; draw new piece
[2058]    11CC: EB 00                                 jmp end_s
[2059]        :                                       
[2060]    11CE:                                       end_s:
[2061]    11CE: C3                                    ret
[2062]        :                                       move_down endp
[2063]        :                                       
[2064]        :                                       ;\--------------------------------------------------------------------------/
[2065]        :                                       ;|                            Move Down Fast                                |
[2066]        :                                       ;/--------------------------------------------------------------------------\
[2067]        :                                       
[2068]    11CF:                                       fast_down proc		; PRESS F
[2069]    11CF:                                       check_down_loop:
[2070]    11CF: E8 0D 00                              call check_down
[2071]    11D2: 80 3E 68 00 01                        cmp down_blockd, 1
[2072]    11D7: 75 05                                 jnz end_f
[2073]    11D9: E8 A6 FE                              call move_down
[2074]    11DC: EB F1                                 jmp check_down_loop
[2075]        :                                       
[2076]    11DE:                                       end_f:
[2077]    11DE: C3                                    ret
[2078]        :                                       fast_down endp
[2079]        :                                       
[2080]        :                                       ;\--------------------------------------------------------------------------/
[2081]        :                                       ;|                              Check Down                                  |
[2082]        :                                       ;/--------------------------------------------------------------------------\
[2083]        :                                       
[2084]    11DF:                                       check_down proc
[2085]        :                                       
[2086]    11DF: 80 3E 1E 00 72                        cmp curr_shape, 'r'
[2087]    11E4: 74 03 E9 94 00                        jnz check_down1
[2088]        :                                       
[2089]        :                                       ; horizontal line
[2090]    11E9: 83 3E 1F 00 00                        cmp curr_ang,0
[2091]    11EE: 75 72                                 jnz vertical_line_cd
[2092]        :                                       
[2093]        :                                       ; check bottom block 1 is empty
[2094]    11F0: 8B 1E 16 00                           mov bx, start_row
[2095]    11F4: 83 C3 04                              add bx, 4
[2096]    11F7: 8B D3                                 mov dx, bx
[2097]    11F9: 8B 0E 10 00                           mov cx, start_col
[2098]    11FD: B4 0D                                 mov ah,0Dh              ; get color of the block
[2099]    11FF: CD 10                                 int 10h
[2100]    1201: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2101]    1203: 74 03 E9 AB 03                        jnz check_down_end_block
[2102]        :                                       
[2103]        :                                       ; check bottom block 2 is empty
[2104]    1208: 8B 1E 16 00                           mov bx, start_row
[2105]    120C: 83 C3 04                              add bx, 4
[2106]    120F: 8B D3                                 mov dx, bx
[2107]    1211: 8B 1E 10 00                           mov bx, start_col
[2108]    1215: 83 C3 04                              add bx, 4
[2109]    1218: 8B CB                                 mov cx, bx
[2110]    121A: B4 0D                                 mov ah,0Dh              ; get color of the block
[2111]    121C: CD 10                                 int 10h
[2112]    121E: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2113]    1220: 74 03 E9 8E 03                        jnz check_down_end_block
[2114]        :                                       
[2115]        :                                       ; check bottom block 3 is empty
[2116]    1225: 8B 1E 16 00                           mov bx, start_row
[2117]    1229: 83 C3 04                              add bx, 4
[2118]    122C: 8B D3                                 mov dx, bx
[2119]    122E: 8B 1E 10 00                           mov bx, start_col
[2120]    1232: 83 C3 08                              add bx, 8
[2121]    1235: 8B CB                                 mov cx, bx
[2122]    1237: B4 0D                                 mov ah,0Dh              ; get color of the block
[2123]    1239: CD 10                                 int 10h
[2124]    123B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2125]    123D: 74 03 E9 71 03                        jnz check_down_end_block
[2126]        :                                       
[2127]        :                                       ; check bottom block 4 is empty
[2128]    1242: 8B 1E 16 00                           mov bx, start_row
[2129]    1246: 83 C3 04                              add bx, 4
[2130]    1249: 8B D3                                 mov dx, bx
[2131]    124B: 8B 1E 10 00                           mov bx, start_col
[2132]    124F: 83 C3 0C                              add bx, 12
[2133]    1252: 8B CB                                 mov cx, bx
[2134]    1254: B4 0D                                 mov ah,0Dh              ; get color of the block
[2135]    1256: CD 10                                 int 10h
[2136]    1258: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2137]    125A: 74 03 E9 54 03                        jnz check_down_end_block
[2138]    125F: E9 56 03                              jmp check_down_end
[2139]        :                                       
[2140]    1262:                                       vertical_line_cd:
[2141]        :                                       ; check bottom block is empty
[2142]    1262: 8B 1E 16 00                           mov bx, start_row
[2143]    1266: 83 C3 10                              add bx, 16
[2144]    1269: 8B D3                                 mov dx, bx
[2145]    126B: 8B 0E 10 00                           mov cx, start_col
[2146]    126F: B4 0D                                 mov ah,0Dh              ; get color of the block
[2147]    1271: CD 10                                 int 10h
[2148]    1273: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2149]    1275: 74 03 E9 39 03                        jnz check_down_end_block
[2150]    127A: E9 3B 03                              jmp check_down_end
[2151]        :                                       
[2152]    127D:                                       check_down1:
[2153]    127D: 80 3E 1E 00 74                        cmp curr_shape, 't'
[2154]    1282: 74 03 E9 30 01                        jnz check_down2
[2155]        :                                       
[2156]    1287: 83 3E 1F 00 00                        cmp curr_ang,0
[2157]    128C: 75 55                                 jnz t90_cd
[2158]        :                                       
[2159]        :                                       ; check bottom block 1 is empty
[2160]    128E: 8B 0E 10 00                           mov cx, start_col
[2161]    1292: 8B 1E 16 00                           mov bx, start_row
[2162]    1296: 83 C3 04                              add bx, 4
[2163]    1299: 8B D3                                 mov dx, bx
[2164]    129B: B4 0D                                 mov ah,0Dh               ; get color of the block
[2165]    129D: CD 10                                 int 10h
[2166]    129F: 3C 00                                 cmp al,0                 ; move if al=0 (black)
[2167]    12A1: 74 03 E9 0D 03                        jnz check_down_end_block
[2168]        :                                       
[2169]        :                                       ; check bottom block 2 is empty
[2170]    12A6: 8B 1E 10 00                           mov bx, start_col
[2171]    12AA: 83 C3 04                              add bx, 4
[2172]    12AD: 8B CB                                 mov cx, bx
[2173]    12AF: 8B 1E 16 00                           mov bx, start_row
[2174]    12B3: 83 C3 08                              add bx, 8
[2175]    12B6: 8B D3                                 mov dx, bx
[2176]    12B8: B4 0D                                 mov ah,0Dh               ; get color of the block
[2177]    12BA: CD 10                                 int 10h
[2178]    12BC: 3C 00                                 cmp al,0                 ; move if al=0 (black)
[2179]    12BE: 74 03 E9 F0 02                        jnz check_down_end_block
[2180]        :                                       
[2181]        :                                       ; check bottom block 3 is empty
[2182]    12C3: 8B 1E 10 00                           mov bx, start_col
[2183]    12C7: 83 C3 08                              add bx, 8
[2184]    12CA: 8B CB                                 mov cx, bx
[2185]    12CC: 8B 1E 16 00                           mov bx, start_row
[2186]    12D0: 83 C3 04                              add bx, 4
[2187]    12D3: 8B D3                                 mov dx, bx
[2188]    12D5: B4 0D                                 mov ah,0Dh              ; get color of the block
[2189]    12D7: CD 10                                 int 10h
[2190]    12D9: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2191]    12DB: 74 03 E9 D3 02                        jnz check_down_end_block
[2192]    12E0: E9 D5 02                              jmp check_down_end
[2193]        :                                       
[2194]    12E3:                                       t90_cd:
[2195]    12E3: 83 3E 1F 00 5A                        cmp curr_ang,90
[2196]    12E8: 75 38                                 jnz t180_cd
[2197]        :                                       
[2198]        :                                       ; check bottom block 1 is empty
[2199]    12EA: 8B 1E 16 00                           mov bx, start_row
[2200]    12EE: 83 C3 0C                              add bx, 12
[2201]    12F1: 8B D3                                 mov dx, bx
[2202]    12F3: 8B 0E 10 00                           mov cx, start_col
[2203]    12F7: B4 0D                                 mov ah,0Dh              ; get color of the block
[2204]    12F9: CD 10                                 int 10h
[2205]    12FB: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2206]    12FD: 74 03 E9 B1 02                        jnz check_down_end_block
[2207]        :                                       
[2208]        :                                       ; check bottom block 2 is empty
[2209]    1302: 8B 1E 16 00                           mov bx, start_row
[2210]    1306: 83 C3 08                              add bx, 8
[2211]    1309: 8B D3                                 mov dx, bx
[2212]    130B: 8B 1E 10 00                           mov bx, start_col
[2213]    130F: 83 EB 04                              sub bx, 4
[2214]    1312: 8B CB                                 mov cx, bx
[2215]    1314: B4 0D                                 mov ah,0Dh              ; get color of the block
[2216]    1316: CD 10                                 int 10h
[2217]    1318: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2218]    131A: 74 03 E9 94 02                        jnz check_down_end_block
[2219]    131F: E9 96 02                              jmp check_down_end
[2220]        :                                       
[2221]    1322:                                       t180_cd:
[2222]    1322: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[2223]    1328: 75 55                                 jnz t270_cd
[2224]        :                                       
[2225]        :                                       ; check bottom block 1 is empty
[2226]    132A: 8B 0E 10 00                           mov cx, start_col
[2227]    132E: 8B 1E 16 00                           mov bx, start_row
[2228]    1332: 83 C3 08                              add bx, 8
[2229]    1335: 8B D3                                 mov dx, bx
[2230]    1337: B4 0D                                 mov ah,0Dh               ; get color of the block
[2231]    1339: CD 10                                 int 10h
[2232]    133B: 3C 00                                 cmp al,0                 ; move if al=0 (black)
[2233]    133D: 74 03 E9 71 02                        jnz check_down_end_block
[2234]        :                                       
[2235]        :                                       ; check bottom block 2 is empty
[2236]    1342: 8B 1E 10 00                           mov bx, start_col
[2237]    1346: 83 EB 04                              sub bx, 4
[2238]    1349: 8B CB                                 mov cx, bx
[2239]    134B: 8B 1E 16 00                           mov bx, start_row
[2240]    134F: 83 C3 08                              add bx, 8
[2241]    1352: 8B D3                                 mov dx, bx
[2242]    1354: B4 0D                                 mov ah,0Dh               ; get color of the block
[2243]    1356: CD 10                                 int 10h
[2244]    1358: 3C 00                                 cmp al,0                 ; move if al=0 (black)
[2245]    135A: 74 03 E9 54 02                        jnz check_down_end_block
[2246]        :                                       
[2247]        :                                       ; check bottom block 3 is empty
[2248]    135F: 8B 1E 10 00                           mov bx, start_col
[2249]    1363: 83 C3 04                              add bx, 4
[2250]    1366: 8B CB                                 mov cx, bx
[2251]    1368: 8B 1E 16 00                           mov bx, start_row
[2252]    136C: 83 C3 08                              add bx, 8
[2253]    136F: 8B D3                                 mov dx, bx
[2254]    1371: B4 0D                                 mov ah,0Dh              ; get color of the block
[2255]    1373: CD 10                                 int 10h
[2256]    1375: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2257]    1377: 74 03 E9 37 02                        jnz check_down_end_block
[2258]    137C: E9 39 02                              jmp check_down_end
[2259]        :                                       
[2260]    137F:                                       t270_cd:
[2261]        :                                       ; check bottom block 1 is empty
[2262]    137F: 8B 1E 16 00                           mov bx, start_row
[2263]    1383: 83 C3 0C                              add bx, 12
[2264]    1386: 8B D3                                 mov dx, bx
[2265]    1388: 8B 0E 10 00                           mov cx, start_col
[2266]    138C: B4 0D                                 mov ah,0Dh              ; get color of the block
[2267]    138E: CD 10                                 int 10h
[2268]    1390: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2269]    1392: 74 03 E9 1C 02                        jnz check_down_end_block
[2270]        :                                       
[2271]        :                                       ; check bottom block 2 is empty
[2272]    1397: 8B 1E 16 00                           mov bx, start_row
[2273]    139B: 83 C3 08                              add bx, 8
[2274]    139E: 8B D3                                 mov dx, bx
[2275]    13A0: 8B 1E 10 00                           mov bx, start_col
[2276]    13A4: 83 C3 04                              add bx, 4
[2277]    13A7: 8B CB                                 mov cx, bx
[2278]    13A9: B4 0D                                 mov ah,0Dh              ; get color of the block
[2279]    13AB: CD 10                                 int 10h
[2280]    13AD: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2281]    13AF: 74 03 E9 FF 01                        jnz check_down_end_block
[2282]    13B4: E9 01 02                              jmp check_down_end
[2283]        :                                       
[2284]    13B7:                                       check_down2:
[2285]    13B7: 80 3E 1E 00 73                        cmp curr_shape, 's'
[2286]    13BC: 75 38                                 jnz check_down3
[2287]        :                                       
[2288]        :                                       ; check bottom block 1 is empty
[2289]    13BE: 8B 1E 16 00                           mov bx, start_row
[2290]    13C2: 83 C3 08                              add bx, 8
[2291]    13C5: 8B D3                                 mov dx, bx
[2292]    13C7: 8B 0E 10 00                           mov cx, start_col
[2293]    13CB: B4 0D                                 mov ah,0Dh              ; get color of the block
[2294]    13CD: CD 10                                 int 10h
[2295]    13CF: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2296]    13D1: 74 03 E9 DD 01                        jnz check_down_end_block
[2297]        :                                       
[2298]        :                                       ; check bottom block 2 is empty
[2299]    13D6: 8B 1E 10 00                           mov bx, start_col
[2300]    13DA: 83 C3 04                              add bx, 4
[2301]    13DD: 8B CB                                 mov cx, bx
[2302]    13DF: 8B 1E 16 00                           mov bx, start_row
[2303]    13E3: 83 C3 08                              add bx, 8
[2304]    13E6: 8B D3                                 mov dx, bx
[2305]    13E8: B4 0D                                 mov ah,0Dh              ; get color of the block
[2306]    13EA: CD 10                                 int 10h
[2307]    13EC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2308]    13EE: 74 03 E9 C0 01                        jnz check_down_end_block
[2309]    13F3: E9 C2 01                              jmp check_down_end
[2310]        :                                       
[2311]    13F6:                                       check_down3:
[2312]    13F6: 80 3E 1E 00 6C                        cmp curr_shape, 'l'
[2313]    13FB: 74 03 E9 30 01                        jnz check_down4
[2314]        :                                       
[2315]    1400: 83 3E 1F 00 00                        cmp curr_ang,0
[2316]    1405: 75 38                                 jnz l90_cd
[2317]        :                                       
[2318]        :                                       ; check bottom block 1 is empty
[2319]    1407: 8B 1E 16 00                           mov bx, start_row
[2320]    140B: 83 C3 0C                              add bx, 12
[2321]    140E: 8B D3                                 mov dx, bx
[2322]    1410: 8B 0E 10 00                           mov cx, start_col
[2323]    1414: B4 0D                                 mov ah,0Dh              ; get color of the block
[2324]    1416: CD 10                                 int 10h
[2325]    1418: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2326]    141A: 74 03 E9 94 01                        jnz check_down_end_block
[2327]        :                                       
[2328]        :                                       ; check bottom block 2 is empty
[2329]    141F: 8B 1E 10 00                           mov bx, start_col
[2330]    1423: 83 C3 04                              add bx, 4
[2331]    1426: 8B CB                                 mov cx, bx
[2332]    1428: 8B 1E 16 00                           mov bx, start_row
[2333]    142C: 83 C3 0C                              add bx, 12
[2334]    142F: 8B D3                                 mov dx, bx
[2335]    1431: B4 0D                                 mov ah,0Dh              ; get color of the block
[2336]    1433: CD 10                                 int 10h
[2337]    1435: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2338]    1437: 74 03 E9 77 01                        jnz check_down_end_block
[2339]    143C: E9 79 01                              jmp check_down_end
[2340]        :                                       
[2341]    143F:                                       l90_cd:
[2342]    143F: 83 3E 1F 00 5A                        cmp curr_ang,90
[2343]    1444: 75 55                                 jnz l180_cd
[2344]        :                                       
[2345]        :                                       ; check bottom block 1 is empty
[2346]    1446: 8B 1E 16 00                           mov bx, start_row
[2347]    144A: 83 C3 08                              add bx, 8
[2348]    144D: 8B D3                                 mov dx, bx
[2349]    144F: 8B 0E 10 00                           mov cx, start_col
[2350]    1453: B4 0D                                 mov ah,0Dh              ; get color of the block
[2351]    1455: CD 10                                 int 10h
[2352]    1457: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2353]    1459: 74 03 E9 55 01                        jnz check_down_end_block
[2354]        :                                       
[2355]        :                                       ; check bottom block 2 is empty
[2356]    145E: 8B 1E 10 00                           mov bx, start_col
[2357]    1462: 83 C3 04                              add bx, 4
[2358]    1465: 8B CB                                 mov cx, bx
[2359]    1467: 8B 1E 16 00                           mov bx, start_row
[2360]    146B: 83 C3 04                              add bx, 4
[2361]    146E: 8B D3                                 mov dx, bx
[2362]    1470: B4 0D                                 mov ah,0Dh              ; get color of the block
[2363]    1472: CD 10                                 int 10h
[2364]    1474: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2365]    1476: 74 03 E9 38 01                        jnz check_down_end_block
[2366]        :                                       
[2367]        :                                       ; check bottom block 3 is empty
[2368]    147B: 8B 1E 10 00                           mov bx, start_col
[2369]    147F: 83 C3 08                              add bx, 8
[2370]    1482: 8B CB                                 mov cx, bx
[2371]    1484: 8B 1E 16 00                           mov bx, start_row
[2372]    1488: 83 C3 04                              add bx, 4
[2373]    148B: 8B D3                                 mov dx, bx
[2374]    148D: B4 0D                                 mov ah,0Dh              ; get color of the block
[2375]    148F: CD 10                                 int 10h
[2376]    1491: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2377]    1493: 74 03 E9 1B 01                        jnz check_down_end_block
[2378]    1498: E9 1D 01                              jmp check_down_end
[2379]        :                                       
[2380]    149B:                                       l180_cd:
[2381]    149B: 81 3E 1F 00 B4 00                     cmp curr_ang,180
[2382]    14A1: 75 38                                 jnz l270_cd
[2383]        :                                       
[2384]        :                                       ; check bottom block 1 is empty
[2385]    14A3: 8B 1E 16 00                           mov bx, start_row
[2386]    14A7: 83 C3 04                              add bx, 4
[2387]    14AA: 8B D3                                 mov dx, bx
[2388]    14AC: 8B 0E 10 00                           mov cx, start_col
[2389]    14B0: B4 0D                                 mov ah,0Dh              ; get color of the block
[2390]    14B2: CD 10                                 int 10h
[2391]    14B4: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2392]    14B6: 74 03 E9 F8 00                        jnz check_down_end_block
[2393]        :                                       
[2394]        :                                       ; check bottom block 2 is empty
[2395]    14BB: 8B 1E 10 00                           mov bx, start_col
[2396]    14BF: 83 C3 04                              add bx, 4
[2397]    14C2: 8B CB                                 mov cx, bx
[2398]    14C4: 8B 1E 16 00                           mov bx, start_row
[2399]    14C8: 83 C3 0C                              add bx, 12
[2400]    14CB: 8B D3                                 mov dx, bx
[2401]    14CD: B4 0D                                 mov ah,0Dh              ; get color of the block
[2402]    14CF: CD 10                                 int 10h
[2403]    14D1: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2404]    14D3: 74 03 E9 DB 00                        jnz check_down_end_block
[2405]    14D8: E9 DD 00                              jmp check_down_end
[2406]        :                                       
[2407]    14DB:                                       l270_cd:
[2408]        :                                       ; check bottom block 1 is empty
[2409]    14DB: 8B 1E 16 00                           mov bx, start_row
[2410]    14DF: 83 C3 08                              add bx, 8
[2411]    14E2: 8B D3                                 mov dx, bx
[2412]    14E4: 8B 0E 10 00                           mov cx, start_col
[2413]    14E8: B4 0D                                 mov ah,0Dh              ; get color of the block
[2414]    14EA: CD 10                                 int 10h
[2415]    14EC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2416]    14EE: 74 03 E9 C0 00                        jnz check_down_end_block
[2417]        :                                       
[2418]        :                                       ; check bottom block 2 is empty
[2419]    14F3: 8B 1E 10 00                           mov bx, start_col
[2420]    14F7: 83 EB 04                              sub bx, 4
[2421]    14FA: 8B CB                                 mov cx, bx
[2422]    14FC: 8B 1E 16 00                           mov bx, start_row
[2423]    1500: 83 C3 08                              add bx, 8
[2424]    1503: 8B D3                                 mov dx, bx
[2425]    1505: B4 0D                                 mov ah,0Dh              ; get color of the block
[2426]    1507: CD 10                                 int 10h
[2427]    1509: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2428]    150B: 74 03 E9 A3 00                        jnz check_down_end_block
[2429]        :                                       
[2430]        :                                       ; check bottom block 3 is empty
[2431]    1510: 8B 1E 10 00                           mov bx, start_col
[2432]    1514: 83 EB 08                              sub bx, 8
[2433]    1517: 8B CB                                 mov cx, bx
[2434]    1519: 8B 1E 16 00                           mov bx, start_row
[2435]    151D: 83 C3 08                              add bx, 8
[2436]    1520: 8B D3                                 mov dx, bx
[2437]    1522: B4 0D                                 mov ah,0Dh              ; get color of the block
[2438]    1524: CD 10                                 int 10h
[2439]    1526: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2440]    1528: 74 03 E9 86 00                        jnz check_down_end_block
[2441]    152D: E9 88 00                              jmp check_down_end
[2442]        :                                       
[2443]    1530:                                       check_down4:  ;'z'
[2444]    1530: 83 3E 1F 00 00                        cmp curr_ang,0
[2445]    1535: 75 4B                                 jnz z90_cd
[2446]        :                                       
[2447]        :                                       ; check bottom block 1 is empty
[2448]    1537: 8B 1E 16 00                           mov bx, start_row
[2449]    153B: 83 C3 08                              add bx, 8
[2450]    153E: 8B D3                                 mov dx, bx
[2451]    1540: 8B 0E 10 00                           mov cx, start_col
[2452]    1544: B4 0D                                 mov ah,0Dh              ; get color of the block
[2453]    1546: CD 10                                 int 10h
[2454]    1548: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2455]    154A: 75 67                                 jnz check_down_end_block
[2456]        :                                       
[2457]        :                                       ; check bottom block 2 is empty
[2458]    154C: 8B 1E 10 00                           mov bx, start_col
[2459]    1550: 83 C3 04                              add bx, 4
[2460]    1553: 8B CB                                 mov cx, bx
[2461]    1555: 8B 1E 16 00                           mov bx, start_row
[2462]    1559: 83 C3 04                              add bx, 4
[2463]    155C: 8B D3                                 mov dx, bx
[2464]    155E: B4 0D                                 mov ah,0Dh              ; get color of the block
[2465]    1560: CD 10                                 int 10h
[2466]    1562: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2467]    1564: 75 4D                                 jnz check_down_end_block
[2468]        :                                       
[2469]        :                                       ; check bottom block 3 is empty
[2470]    1566: 8B 1E 10 00                           mov bx, start_col
[2471]    156A: 83 EB 04                              sub bx, 4
[2472]    156D: 8B CB                                 mov cx, bx
[2473]    156F: 8B 1E 16 00                           mov bx, start_row
[2474]    1573: 83 C3 08                              add bx, 8
[2475]    1576: 8B D3                                 mov dx, bx
[2476]    1578: B4 0D                                 mov ah,0Dh              ; get color of the block
[2477]    157A: CD 10                                 int 10h
[2478]    157C: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2479]    157E: 75 33                                 jnz check_down_end_block
[2480]    1580: EB 36                                 jmp check_down_end
[2481]        :                                       
[2482]    1582:                                       z90_cd:
[2483]        :                                       ; check bottom block 1 is empty
[2484]    1582: 8B 1E 16 00                           mov bx, start_row
[2485]    1586: 83 C3 08                              add bx, 8
[2486]    1589: 8B D3                                 mov dx, bx
[2487]    158B: 8B 0E 10 00                           mov cx, start_col
[2488]    158F: B4 0D                                 mov ah,0Dh              ; get color of the block
[2489]    1591: CD 10                                 int 10h
[2490]    1593: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2491]    1595: 75 1C                                 jnz check_down_end_block
[2492]        :                                       
[2493]        :                                       ; check bottom block 2 is empty
[2494]    1597: 8B 1E 10 00                           mov bx, start_col
[2495]    159B: 83 C3 04                              add bx, 4
[2496]    159E: 8B CB                                 mov cx, bx
[2497]    15A0: 8B 1E 16 00                           mov bx, start_row
[2498]    15A4: 83 C3 0C                              add bx, 12
[2499]    15A7: 8B D3                                 mov dx, bx
[2500]    15A9: B4 0D                                 mov ah,0Dh              ; get color of the block
[2501]    15AB: CD 10                                 int 10h
[2502]    15AD: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2503]    15AF: 75 02                                 jnz check_down_end_block
[2504]    15B1: EB 05                                 jmp check_down_end
[2505]        :                                       
[2506]    15B3:                                       check_down_end_block:
[2507]    15B3: C6 06 68 00 00                        mov down_blockd, 0
[2508]        :                                       
[2509]    15B8:                                       check_down_end:
[2510]    15B8: C3                                    ret
[2511]        :                                       check_down endp
[2512]        :                                       
[2513]        :                                       ;\--------------------------------------------------------------------------/
[2514]        :                                       ;|                                Rotate                                    |
[2515]        :                                       ;/--------------------------------------------------------------------------\
[2516]        :                                       
[2517]    15B9:                                       rotate proc             ; PRESS W
[2518]    15B9: C6 06 21 00 00                        mov curr_color, 0   ; set black color (for clearing)
[2519]        :                                       
[2520]    15BE: 80 3E 1E 00 73                        cmp curr_shape, 's'
[2521]    15C3: 75 03                                 jnz ro1             ; rotated square is itself
[2522]    15C5: E9 B7 03                              jmp end_w
[2523]        :                                       
[2524]    15C8:                                       ro1:
[2525]    15C8: 80 3E 1E 00 74                        cmp curr_shape, 't'
[2526]    15CD: 74 03 E9 08 01                        jnz ro2
[2527]        :                                       
[2528]    15D2: 83 3E 1F 00 00                        cmp curr_ang, 0
[2529]    15D7: 75 5F                                 jnz ang_t2
[2530]        :                                       
[2531]        :                                       ; check index 2 is empty
[2532]    15D9: 8B 1E 16 00                           mov bx, start_row
[2533]    15DD: 83 C3 04                              add bx, 4
[2534]    15E0: 8B D3                                 mov dx, bx
[2535]    15E2: 8B 0E 10 00                           mov cx, start_col
[2536]    15E6: B4 0D                                 mov ah,0Dh              ; get color of the block
[2537]    15E8: CD 10                                 int 10h
[2538]    15EA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2539]    15EC: 74 03 E9 8E 03                        jnz end_w
[2540]        :                                       
[2541]        :                                       ; check index 3 is empty
[2542]    15F1: 8B 1E 16 00                           mov bx, start_row
[2543]    15F5: 83 C3 08                              add bx, 8
[2544]    15F8: 8B D3                                 mov dx, bx
[2545]    15FA: 8B 0E 10 00                           mov cx, start_col
[2546]    15FE: B4 0D                                 mov ah,0Dh              ; get color of the block
[2547]    1600: CD 10                                 int 10h
[2548]    1602: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2549]    1604: 74 03 E9 76 03                        jnz end_w
[2550]        :                                       
[2551]        :                                       ; check index 4 is empty
[2552]    1609: 8B 1E 16 00                           mov bx, start_row
[2553]    160D: 83 C3 04                              add bx, 4
[2554]    1610: 8B D3                                 mov dx, bx
[2555]    1612: 8B 0E 16 00                           mov cx, start_row
[2556]    1616: 8B 1E 10 00                           mov bx, start_col
[2557]    161A: 83 EB 04                              sub bx, 4
[2558]    161D: 8B CB                                 mov cx, bx
[2559]    161F: B4 0D                                 mov ah,0Dh              ; get color of the block
[2560]    1621: CD 10                                 int 10h
[2561]    1623: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2562]    1625: 74 03 E9 55 03                        jnz end_w
[2563]        :                                       
[2564]        :                                       ; clear and draw new piece
[2565]    162A: E8 1E EE                              call draw_t             ; clear previous piece
[2566]    162D: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[2567]    1632: E8 60 EE                              call draw_t_90          ; rotate and draw new piece
[2568]    1635: E9 47 03                              jmp end_w
[2569]        :                                       
[2570]    1638:                                       ang_t2:
[2571]    1638: 83 3E 1F 00 5A                        cmp curr_ang, 90
[2572]    163D: 75 2F                                 jnz ang_t3
[2573]        :                                       
[2574]        :                                       ; check index 3 is empty
[2575]    163F: 8B 1E 16 00                           mov bx, start_row
[2576]    1643: 83 C3 04                              add bx, 4
[2577]    1646: 8B D3                                 mov dx, bx
[2578]    1648: 8B 0E 16 00                           mov cx, start_row
[2579]    164C: 8B 1E 10 00                           mov bx, start_col
[2580]    1650: 83 C3 04                              add bx, 4
[2581]    1653: 8B CB                                 mov cx, bx
[2582]    1655: B4 0D                                 mov ah,0Dh              ; get color of the block
[2583]    1657: CD 10                                 int 10h
[2584]    1659: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2585]    165B: 74 03 E9 1F 03                        jnz end_w
[2586]        :                                       
[2587]        :                                       ; clear and draw new piece
[2588]    1660: E8 32 EE                              call draw_t_90          ; clear previous piece
[2589]    1663: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[2590]    1668: E8 74 EE                              call draw_t_180         ; rotate and draw new piece
[2591]    166B: E9 11 03                              jmp end_w
[2592]        :                                       
[2593]    166E:                                       ang_t3:
[2594]    166E: 81 3E 1F 00 B4 00                     cmp curr_ang, 180
[2595]    1674: 75 26                                 jnz ang_t4
[2596]        :                                       
[2597]        :                                       ; check index 3 is empty
[2598]    1676: 8B 1E 16 00                           mov bx, start_row
[2599]    167A: 83 C3 08                              add bx, 8
[2600]    167D: 8B D3                                 mov dx, bx
[2601]    167F: 8B 0E 10 00                           mov cx, start_col
[2602]    1683: B4 0D                                 mov ah,0Dh              ; get color of the block
[2603]    1685: CD 10                                 int 10h
[2604]    1687: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2605]    1689: 74 03 E9 F1 02                        jnz end_w
[2606]        :                                       
[2607]        :                                       ; clear and draw new piece
[2608]    168E: E8 4E EE                              call draw_t_180         ; clear previous piece
[2609]    1691: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[2610]    1696: E8 95 EE                              call draw_t_270         ; rotate and draw new piece
[2611]    1699: E9 E3 02                              jmp end_w
[2612]        :                                       
[2613]    169C:                                       ang_t4:
[2614]        :                                       ; check index 2 is empty
[2615]    169C: 8B 1E 10 00                           mov bx, start_col
[2616]    16A0: 83 C3 04                              add bx, 4
[2617]    16A3: 8B CB                                 mov cx, bx
[2618]    16A5: 8B 16 16 00                           mov dx, start_row
[2619]    16A9: B4 0D                                 mov ah,0Dh              ; get color of the block
[2620]    16AB: CD 10                                 int 10h
[2621]    16AD: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2622]    16AF: 74 03 E9 CB 02                        jnz end_w
[2623]        :                                       
[2624]        :                                       ; check index 3 is empty
[2625]    16B4: 8B 1E 10 00                           mov bx, start_col
[2626]    16B8: 83 C3 08                              add bx, 8
[2627]    16BB: 8B CB                                 mov cx, bx
[2628]    16BD: 8B 16 16 00                           mov dx, start_row
[2629]    16C1: B4 0D                                 mov ah,0Dh              ; get color of the block
[2630]    16C3: CD 10                                 int 10h
[2631]    16C5: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2632]    16C7: 74 03 E9 B3 02                        jnz end_w
[2633]        :                                       
[2634]        :                                       ; clear and draw new piece
[2635]    16CC: E8 5F EE                              call draw_t_270         ; clear previous piece
[2636]    16CF: C6 06 21 00 05                        mov curr_color, 05h     ; set purple color
[2637]    16D4: E8 74 ED                              call draw_t             ; rotate and draw new piece
[2638]    16D7: E9 A5 02                              jmp end_w
[2639]        :                                       
[2640]    16DA:                                       ro2:
[2641]    16DA: 80 3E 1E 00 6C                        cmp curr_shape,'l'
[2642]    16DF: 74 03 E9 53 01                        jnz ro3
[2643]        :                                       
[2644]    16E4: 83 3E 1F 00 00                        cmp curr_ang, 0
[2645]    16E9: 75 3E                                 jnz ang_l2
[2646]        :                                       
[2647]        :                                       ; check index 2 is empty
[2648]    16EB: 8B 1E 10 00                           mov bx, start_col
[2649]    16EF: 83 C3 04                              add bx, 4
[2650]    16F2: 8B CB                                 mov cx, bx
[2651]    16F4: 8B 16 16 00                           mov dx, start_row
[2652]    16F8: B4 0D                                 mov ah,0Dh              ; get color of the block
[2653]    16FA: CD 10                                 int 10h
[2654]    16FC: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2655]    16FE: 74 03 E9 7C 02                        jnz end_w
[2656]        :                                       
[2657]        :                                       ; check index 1 is empty
[2658]    1703: 8B 1E 10 00                           mov bx, start_col
[2659]    1707: 83 C3 08                              add bx, 8
[2660]    170A: 8B CB                                 mov cx, bx
[2661]    170C: 8B 16 16 00                           mov dx, start_row
[2662]    1710: B4 0D                                 mov ah,0Dh              ; get color of the block
[2663]    1712: CD 10                                 int 10h
[2664]    1714: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2665]    1716: 74 03 E9 64 02                        jnz end_w
[2666]        :                                       
[2667]        :                                       ; clear and draw new piece
[2668]    171B: E8 5A EE                              call draw_l             ; clear previous piece
[2669]    171E: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2670]    1723: E8 9C EE                              call draw_l_90          ; rotate and draw new piece
[2671]    1726: E9 56 02                              jmp end_w
[2672]        :                                       
[2673]    1729:                                       ang_l2:
[2674]    1729: 83 3E 1F 00 5A                        cmp curr_ang, 90
[2675]    172E: 75 50                                 jnz ang_l3
[2676]        :                                       
[2677]        :                                       ; check index 2 is empty
[2678]    1730: 8B 1E 16 00                           mov bx, start_row
[2679]    1734: 83 C3 04                              add bx, 4
[2680]    1737: 8B D3                                 mov dx, bx
[2681]    1739: 8B 0E 16 00                           mov cx, start_row
[2682]    173D: 8B 1E 10 00                           mov bx, start_col
[2683]    1741: 83 C3 04                              add bx, 4
[2684]    1744: 8B CB                                 mov cx, bx
[2685]    1746: B4 0D                                 mov ah,0Dh              ; get color of the block
[2686]    1748: CD 10                                 int 10h
[2687]    174A: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2688]    174C: 74 03 E9 2E 02                        jnz end_w
[2689]        :                                       
[2690]        :                                       ; check index 1 is empty
[2691]    1751: 8B 1E 16 00                           mov bx, start_row
[2692]    1755: 83 C3 08                              add bx, 8
[2693]    1758: 8B D3                                 mov dx, bx
[2694]    175A: 8B 0E 16 00                           mov cx, start_row
[2695]    175E: 8B 1E 10 00                           mov bx, start_col
[2696]    1762: 83 C3 04                              add bx, 4
[2697]    1765: 8B CB                                 mov cx, bx
[2698]    1767: B4 0D                                 mov ah,0Dh              ; get color of the block
[2699]    1769: CD 10                                 int 10h
[2700]    176B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2701]    176D: 74 03 E9 0D 02                        jnz end_w
[2702]        :                                       
[2703]        :                                       ; clear and draw new piece
[2704]    1772: E8 4D EE                              call draw_l_90          ; clear previous piece
[2705]    1775: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2706]    177A: E8 8A EE                              call draw_l_180         ; rotate and draw new piece
[2707]    177D: E9 FF 01                              jmp end_w
[2708]        :                                       
[2709]    1780:                                       ang_l3:
[2710]    1780: 81 3E 1F 00 B4 00                     cmp curr_ang, 180
[2711]    1786: 75 68                                 jnz ang_l4
[2712]        :                                       
[2713]        :                                       ; check index 3 is empty
[2714]    1788: 8B 1E 16 00                           mov bx, start_row
[2715]    178C: 83 C3 04                              add bx, 4
[2716]    178F: 8B D3                                 mov dx, bx
[2717]    1791: 8B 0E 10 00                           mov cx, start_col
[2718]    1795: B4 0D                                 mov ah,0Dh              ; get color of the block
[2719]    1797: CD 10                                 int 10h
[2720]    1799: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2721]    179B: 74 03 E9 DF 01                        jnz end_w
[2722]        :                                       
[2723]        :                                       ; check index 2 is empty
[2724]    17A0: 8B 1E 16 00                           mov bx, start_row
[2725]    17A4: 83 C3 04                              add bx, 4
[2726]    17A7: 8B D3                                 mov dx, bx
[2727]    17A9: 8B 0E 16 00                           mov cx, start_row
[2728]    17AD: 8B 1E 10 00                           mov bx, start_col
[2729]    17B1: 83 EB 04                              sub bx, 4
[2730]    17B4: 8B CB                                 mov cx, bx
[2731]    17B6: B4 0D                                 mov ah,0Dh              ; get color of the block
[2732]    17B8: CD 10                                 int 10h
[2733]    17BA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2734]    17BC: 74 03 E9 BE 01                        jnz end_w
[2735]        :                                       
[2736]        :                                       ; check index 1 is empty
[2737]    17C1: 8B 1E 16 00                           mov bx, start_row
[2738]    17C5: 83 C3 04                              add bx, 4
[2739]    17C8: 8B D3                                 mov dx, bx
[2740]    17CA: 8B 0E 16 00                           mov cx, start_row
[2741]    17CE: 8B 1E 10 00                           mov bx, start_col
[2742]    17D2: 83 EB 08                              sub bx, 8
[2743]    17D5: 8B CB                                 mov cx, bx
[2744]    17D7: B4 0D                                 mov ah,0Dh              ; get color of the block
[2745]    17D9: CD 10                                 int 10h
[2746]    17DB: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2747]    17DD: 74 03 E9 9D 01                        jnz end_w
[2748]        :                                       
[2749]        :                                       ; clear and draw new piece
[2750]    17E2: E8 22 EE                              call draw_l_180         ; clear previous piece
[2751]    17E5: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2752]    17EA: E8 69 EE                              call draw_l_270         ; rotate and draw new piece
[2753]    17ED: E9 8F 01                              jmp end_w
[2754]        :                                       
[2755]    17F0:                                       ang_l4:
[2756]        :                                       ; check index 3 is empty
[2757]    17F0: 8B 1E 16 00                           mov bx, start_row
[2758]    17F4: 83 C3 08                              add bx, 8
[2759]    17F7: 8B D3                                 mov dx, bx
[2760]    17F9: 8B 0E 10 00                           mov cx, start_col
[2761]    17FD: B4 0D                                 mov ah,0Dh              ; get color of the block
[2762]    17FF: CD 10                                 int 10h
[2763]    1801: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2764]    1803: 74 03 E9 77 01                        jnz end_w
[2765]        :                                       
[2766]        :                                       ; check index 4 is empty
[2767]    1808: 8B 1E 16 00                           mov bx, start_row
[2768]    180C: 83 C3 08                              add bx, 8
[2769]    180F: 8B D3                                 mov dx, bx
[2770]    1811: 8B 0E 16 00                           mov cx, start_row
[2771]    1815: 8B 1E 10 00                           mov bx, start_col
[2772]    1819: 83 C3 04                              add bx, 4
[2773]    181C: 8B CB                                 mov cx, bx
[2774]    181E: B4 0D                                 mov ah,0Dh              ; get color of the block
[2775]    1820: CD 10                                 int 10h
[2776]    1822: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2777]    1824: 74 03 E9 56 01                        jnz end_w
[2778]        :                                       
[2779]        :                                       ; clear and draw new piece
[2780]    1829: E8 2A EE                              call draw_l_270         ; clear previous piece
[2781]    182C: C6 06 21 00 0C                        mov curr_color, 0Ch     ; set orange color
[2782]    1831: E8 44 ED                              call draw_l             ; rotate and draw new piece
[2783]    1834: E9 48 01                              jmp end_w
[2784]        :                                       
[2785]    1837:                                       ro3:
[2786]    1837: 80 3E 1E 00 7A                        cmp curr_shape,'z'
[2787]    183C: 74 03 E9 9E 00                        jnz ro4
[2788]        :                                       
[2789]    1841: 83 3E 1F 00 00                        cmp curr_ang, 0
[2790]    1846: 75 50                                 jnz ang_z2
[2791]        :                                       
[2792]        :                                       ; check index 3 is empty
[2793]    1848: 8B 1E 16 00                           mov bx, start_row
[2794]    184C: 83 C3 04                              add bx, 4
[2795]    184F: 8B D3                                 mov dx, bx
[2796]    1851: 8B 0E 16 00                           mov cx, start_row
[2797]    1855: 8B 1E 10 00                           mov bx, start_col
[2798]    1859: 83 C3 04                              add bx, 4
[2799]    185C: 8B CB                                 mov cx, bx
[2800]    185E: B4 0D                                 mov ah,0Dh              ; get color of the block
[2801]    1860: CD 10                                 int 10h
[2802]    1862: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2803]    1864: 74 03 E9 16 01                        jnz end_w
[2804]        :                                       
[2805]        :                                       ; check index 4 is empty
[2806]    1869: 8B 1E 16 00                           mov bx, start_row
[2807]    186D: 83 C3 08                              add bx, 8
[2808]    1870: 8B D3                                 mov dx, bx
[2809]    1872: 8B 0E 16 00                           mov cx, start_row
[2810]    1876: 8B 1E 10 00                           mov bx, start_col
[2811]    187A: 83 C3 04                              add bx, 4
[2812]    187D: 8B CB                                 mov cx, bx
[2813]    187F: B4 0D                                 mov ah,0Dh              ; get color of the block
[2814]    1881: CD 10                                 int 10h
[2815]    1883: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2816]    1885: 74 03 E9 F5 00                        jnz end_w
[2817]        :                                       
[2818]        :                                       ; clear and draw new piece
[2819]    188A: E8 18 EE                              call draw_z                 ; clear previous piece
[2820]    188D: C6 06 21 00 0A                        mov curr_color, 0Ah         ; set green color
[2821]    1892: E8 5A EE                              call draw_z_90              ; rotate and draw new piece
[2822]    1895: E9 E7 00                              jmp end_w
[2823]        :                                       
[2824]    1898:                                       ang_z2:     ; case 90
[2825]        :                                       ; check index 2 is empty
[2826]    1898: 8B 16 16 00                           mov dx, start_row
[2827]    189C: 8B 1E 10 00                           mov bx, start_col
[2828]    18A0: 83 C3 04                              add bx, 4
[2829]    18A3: 8B CB                                 mov cx, bx
[2830]    18A5: B4 0D                                 mov ah,0Dh              ; get color of the block
[2831]    18A7: CD 10                                 int 10h
[2832]    18A9: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2833]    18AB: 74 03 E9 CF 00                        jnz end_w
[2834]        :                                       
[2835]        :                                       ; check index 3 is empty
[2836]    18B0: 8B 1E 16 00                           mov bx, start_row
[2837]    18B4: 83 C3 04                              add bx, 4
[2838]    18B7: 8B D3                                 mov dx, bx
[2839]    18B9: 8B 0E 16 00                           mov cx, start_row
[2840]    18BD: 8B 1E 10 00                           mov bx, start_col
[2841]    18C1: 83 EB 04                              sub bx, 4
[2842]    18C4: 8B CB                                 mov cx, bx
[2843]    18C6: B4 0D                                 mov ah,0Dh              ; get color of the block
[2844]    18C8: CD 10                                 int 10h
[2845]    18CA: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2846]    18CC: 74 03 E9 AE 00                        jnz end_w
[2847]        :                                       
[2848]        :                                       ; clear and draw new piece
[2849]    18D1: E8 1B EE                              call draw_z_90          ; clear previous piece
[2850]    18D4: C6 06 21 00 0A                        mov curr_color, 0Ah     ; set green color
[2851]    18D9: E8 C9 ED                              call draw_z             ; rotate and draw new piece
[2852]    18DC: E9 A0 00                              jmp end_w
[2853]        :                                       
[2854]    18DF:                                       ro4:        ;case r
[2855]    18DF: 83 3E 1F 00 00                        cmp curr_ang, 0         ; horizontal line
[2856]    18E4: 75 4F                                 jnz ang_r2
[2857]        :                                       
[2858]        :                                       ; check index 2 is empty
[2859]    18E6: 8B 1E 16 00                           mov bx, start_row
[2860]    18EA: 83 C3 04                              add bx, 4
[2861]    18ED: 8B D3                                 mov dx, bx
[2862]    18EF: 8B 0E 10 00                           mov cx, start_col
[2863]    18F3: B4 0D                                 mov ah,0Dh              ; get color of the block
[2864]    18F5: CD 10                                 int 10h
[2865]    18F7: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2866]    18F9: 74 03 E9 81 00                        jnz end_w
[2867]        :                                       
[2868]        :                                       ; check index 3 is empty
[2869]    18FE: 8B 1E 16 00                           mov bx, start_row
[2870]    1902: 83 C3 08                              add bx, 8
[2871]    1905: 8B D3                                 mov dx, bx
[2872]    1907: 8B 0E 10 00                           mov cx, start_col
[2873]    190B: B4 0D                                 mov ah,0Dh              ; get color of the block
[2874]    190D: CD 10                                 int 10h
[2875]    190F: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2876]    1911: 75 6C                                 jnz end_w
[2877]        :                                       
[2878]        :                                       ; check index 4 is empty
[2879]    1913: 8B 1E 16 00                           mov bx, start_row
[2880]    1917: 83 C3 0C                              add bx, 12
[2881]    191A: 8B D3                                 mov dx, bx
[2882]    191C: 8B 0E 10 00                           mov cx, start_col
[2883]    1920: B4 0D                                 mov ah,0Dh              ; get color of the block
[2884]    1922: CD 10                                 int 10h
[2885]    1924: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2886]    1926: 75 57                                 jnz end_w
[2887]        :                                       
[2888]        :                                       ; clear and draw new piece
[2889]    1928: E8 5E EA                              call draw_line          ; clear previous piece
[2890]    192B: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[2891]    1930: E8 95 EA                              call draw_line_90       ; rotate and draw new piece
[2892]    1933: EB 4A                                 jmp end_w
[2893]        :                                       
[2894]    1935:                                       ang_r2:              ; case 90
[2895]        :                                       ; check index 2 is empty
[2896]    1935: 8B 1E 10 00                           mov bx, start_col
[2897]    1939: 83 C3 04                              add bx, 4
[2898]    193C: 8B CB                                 mov cx, bx
[2899]    193E: 8B 16 16 00                           mov dx, start_row
[2900]    1942: B4 0D                                 mov ah,0Dh              ; get color of the block
[2901]    1944: CD 10                                 int 10h
[2902]    1946: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2903]    1948: 75 35                                 jnz end_w
[2904]        :                                       
[2905]        :                                       ; check index 3 is empty
[2906]    194A: 8B 1E 10 00                           mov bx, start_col
[2907]    194E: 83 C3 08                              add bx, 8
[2908]    1951: 8B CB                                 mov cx, bx
[2909]    1953: 8B 16 16 00                           mov dx, start_row
[2910]    1957: B4 0D                                 mov ah,0Dh              ; get color of the block
[2911]    1959: CD 10                                 int 10h
[2912]    195B: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2913]    195D: 75 20                                 jnz end_w
[2914]        :                                       
[2915]        :                                       ; check index 4 is empty
[2916]    195F: 8B 1E 10 00                           mov bx, start_col
[2917]    1963: 83 C3 0C                              add bx, 12
[2918]    1966: 8B CB                                 mov cx, bx
[2919]    1968: 8B 16 16 00                           mov dx, start_row
[2920]    196C: B4 0D                                 mov ah,0Dh              ; get color of the block
[2921]    196E: CD 10                                 int 10h
[2922]    1970: 3C 00                                 cmp al,0                ; move if al=0 (black)
[2923]    1972: 75 0B                                 jnz end_w
[2924]        :                                       
[2925]        :                                       ; clear and draw new piece
[2926]    1974: E8 51 EA                              call draw_line_90       ; clear previous piece
[2927]    1977: C6 06 21 00 0B                        mov curr_color, 0Bh     ; set blue color
[2928]    197C: E8 0A EA                              call draw_line          ; rotate and draw new piece
[2929]        :                                       
[2930]    197F:                                       end_w:
[2931]    197F: C3                                    ret
[2932]        :                                       rotate endp
[2933]        :                                       
[2934]        :                                       ;\--------------------------------------------------------------------------/
[2935]        :                                       ;|                        Delete & Shift Full Rows                          |
[2936]        :                                       ;/--------------------------------------------------------------------------\
[2937]        :                                       
[2938]    1980:                                       check_full proc
[2939]        :                                       
[2940]    1980: C7 06 6C 00 00 00                     mov full_rows_num, 0 ; reset
[2941]        :                                       
[2942]        :                                       ; 1. check shape, 2. check angle, 3. check rows related to the shape
[2943]    1986: 80 3E 1E 00 72                        cmp curr_shape, 'r'
[2944]    198B: 74 03 E9 B8 00                        jnz maybe_l
[2945]        :                                       
[2946]    1990: 83 3E 1F 00 00                        cmp curr_ang, 0
[2947]    1995: 75 27                                 jnz r_ang_90
[2948]        :                                       
[2949]        :                                       ; check row 1
[2950]    1997: 8B 0E 1A 00                           mov cx, srch_str_col        ;141
[2951]    199B: 8B 16 16 00                           mov dx, start_row
[2952]    199F:                                       check_row_r:
[2953]    199F: B4 0D                                 mov ah, 0Dh             ; get color of the block
[2954]    19A1: CD 10                                 int 10h
[2955]    19A3: 3C 00                                 cmp al, 0
[2956]    19A5: 75 03 E9 9F 04                        je end_check            ; row is not full
[2957]    19AA: 83 C1 04                              add cx, 4               ; check next col
[2958]    19AD: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[2959]    19B1: 7E EC                                 jle check_row_r
[2960]    19B3: FF 06 6C 00                           inc full_rows_num
[2961]    19B7: FF 36 16 00                           push start_row
[2962]    19BB: E9 8B 04                              jmp end_check
[2963]        :                                       
[2964]    19BE:                                       r_ang_90:
[2965]        :                                       
[2966]        :                                       ; check row 4
[2967]    19BE:                                       check_row_r90_4:
[2968]    19BE: 8B 0E 1A 00                           mov cx, srch_str_col
[2969]    19C2: 8B 16 16 00                           mov dx, start_row
[2970]    19C6: 83 C2 0C                              add dx, 12
[2971]        :                                       
[2972]    19C9:                                       check_row_r90_4_:
[2973]    19C9: B4 0D                                 mov ah, 0Dh             ; get color of the block
[2974]    19CB: CD 10                                 int 10h
[2975]    19CD: 3C 00                                 cmp al, 0
[2976]    19CF: 74 0E                                 je check_row_r90_3      ; row is not full
[2977]    19D1: 83 C1 04                              add cx, 4               ; check next col
[2978]    19D4: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[2979]    19D8: 7E EF                                 jle check_row_r90_4_
[2980]    19DA: FF 06 6C 00                           inc full_rows_num
[2981]    19DE: 52                                    push dx                 ; push start_row+12
[2982]        :                                       
[2983]        :                                       ; check row 3
[2984]    19DF:                                       check_row_r90_3:
[2985]    19DF: 8B 0E 1A 00                           mov cx, srch_str_col
[2986]    19E3: 8B 16 16 00                           mov dx, start_row
[2987]    19E7: 83 C2 08                              add dx, 8
[2988]        :                                       
[2989]    19EA:                                       check_row_r90_3_:
[2990]    19EA: B4 0D                                 mov ah, 0Dh             ; get color of the block
[2991]    19EC: CD 10                                 int 10h
[2992]    19EE: 3C 00                                 cmp al, 0
[2993]    19F0: 74 0E                                 je check_row_r90_2      ; row is not full
[2994]    19F2: 83 C1 04                              add cx, 4               ; check next col
[2995]    19F5: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[2996]    19F9: 7E EF                                 jle check_row_r90_3_
[2997]    19FB: FF 06 6C 00                           inc full_rows_num
[2998]    19FF: 52                                    push dx                 ; push start_row+8
[2999]        :                                       
[3000]        :                                       ; check row 2
[3001]    1A00:                                       check_row_r90_2:
[3002]    1A00: 8B 0E 1A 00                           mov cx, srch_str_col
[3003]    1A04: 8B 16 16 00                           mov dx, start_row
[3004]    1A08: 83 C2 04                              add dx, 4
[3005]        :                                       
[3006]    1A0B:                                       check_row_r90_2_:
[3007]    1A0B: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3008]    1A0D: CD 10                                 int 10h
[3009]    1A0F: 3C 00                                 cmp al, 0
[3010]    1A11: 74 0E                                 je check_row_r90_1      ; row is not full
[3011]    1A13: 83 C1 04                              add cx, 4               ; check next col
[3012]    1A16: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of borderr
[3013]    1A1A: 7E EF                                 jle check_row_r90_2_
[3014]    1A1C: FF 06 6C 00                           inc full_rows_num
[3015]    1A20: 52                                    push dx                 ; push start_row+4
[3016]        :                                       
[3017]        :                                       ; check row 1
[3018]    1A21:                                       check_row_r90_1:
[3019]    1A21: 8B 0E 1A 00                           mov cx, srch_str_col
[3020]    1A25: 8B 16 16 00                           mov dx, start_row
[3021]        :                                       
[3022]    1A29:                                       check_row_r90_1_:
[3023]    1A29: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3024]    1A2B: CD 10                                 int 10h
[3025]    1A2D: 3C 00                                 cmp al, 0
[3026]    1A2F: 75 03 E9 15 04                        je end_check            ; row is not full
[3027]    1A34: 83 C1 04                              add cx, 4               ; check next col
[3028]    1A37: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3029]    1A3B: 7E EC                                 jle check_row_r90_1_
[3030]    1A3D: FF 06 6C 00                           inc full_rows_num
[3031]    1A41: FF 36 16 00                           push start_row
[3032]    1A45: E9 01 04                              jmp end_check
[3033]        :                                       
[3034]    1A48:                                       maybe_l:
[3035]    1A48: 80 3E 1E 00 6C                        cmp curr_shape, 'l'
[3036]    1A4D: 74 03 E9 78 01                        jnz maybe_t
[3037]        :                                       
[3038]    1A52: 83 3E 1F 00 00                        cmp curr_ang, 0
[3039]    1A57: 75 69                                 jnz l_ang_90
[3040]        :                                       
[3041]        :                                       ; check row 3
[3042]    1A59:                                       check_row_l_3:
[3043]    1A59: 8B 0E 1A 00                           mov cx, srch_str_col
[3044]    1A5D: 8B 16 16 00                           mov dx, start_row
[3045]    1A61: 83 C2 08                              add dx, 8
[3046]        :                                       
[3047]    1A64:                                       check_row_l_3_:
[3048]    1A64: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3049]    1A66: CD 10                                 int 10h
[3050]    1A68: 3C 00                                 cmp al, 0
[3051]    1A6A: 74 0E                                 je check_row_l_2        ; row is not full
[3052]    1A6C: 83 C1 04                              add cx, 4               ; check block of the next row
[3053]    1A6F: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3054]    1A73: 7E EF                                 jle check_row_l_3_
[3055]    1A75: FF 06 6C 00                           inc full_rows_num
[3056]    1A79: 52                                    push dx                 ; push start_row+8
[3057]        :                                       
[3058]        :                                       ; check row 2
[3059]    1A7A:                                       check_row_l_2:
[3060]    1A7A: 8B 0E 1A 00                           mov cx, srch_str_col
[3061]    1A7E: 8B 16 16 00                           mov dx, start_row
[3062]    1A82: 83 C2 04                              add dx, 4
[3063]        :                                       
[3064]    1A85:                                       check_row_l_2_:
[3065]    1A85: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3066]    1A87: CD 10                                 int 10h
[3067]    1A89: 3C 00                                 cmp al, 0
[3068]    1A8B: 74 0E                                 je check_row_l_1        ; row is not full
[3069]    1A8D: 83 C1 04                              add cx, 4               ; check block of the next row
[3070]    1A90: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3071]    1A94: 7E EF                                 jle check_row_l_2_
[3072]    1A96: FF 06 6C 00                           inc full_rows_num
[3073]    1A9A: 52                                    push dx                 ; push start_row+4
[3074]        :                                       
[3075]        :                                       ; check row 1
[3076]    1A9B:                                       check_row_l_1:
[3077]    1A9B: 8B 0E 1A 00                           mov cx, srch_str_col
[3078]    1A9F: 8B 16 16 00                           mov dx, start_row
[3079]        :                                       
[3080]    1AA3:                                       check_row_l_1_:
[3081]    1AA3: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3082]    1AA5: CD 10                                 int 10h
[3083]    1AA7: 3C 00                                 cmp al, 0
[3084]    1AA9: 75 03 E9 9B 03                        je end_check            ; row is not full
[3085]    1AAE: 83 C1 04                              add cx, 4               ; check next col
[3086]    1AB1: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3087]    1AB5: 7E EC                                 jle check_row_l_1_
[3088]    1AB7: FF 06 6C 00                           inc full_rows_num
[3089]    1ABB: FF 36 16 00                           push start_row
[3090]    1ABF: E9 87 03                              jmp end_check
[3091]        :                                       
[3092]    1AC2:                                       l_ang_90:
[3093]    1AC2: 83 3E 1F 00 5A                        cmp curr_ang, 90
[3094]    1AC7: 75 48                                 jnz l_ang_180
[3095]        :                                       
[3096]        :                                       ; check row 2
[3097]    1AC9:                                       check_row_l_90_2:
[3098]    1AC9: 8B 0E 1A 00                           mov cx, srch_str_col
[3099]    1ACD: 8B 16 16 00                           mov dx, start_row
[3100]    1AD1: 83 C2 04                              add dx, 4
[3101]        :                                       
[3102]    1AD4:                                       check_row_l_90_2_:
[3103]    1AD4: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3104]    1AD6: CD 10                                 int 10h
[3105]    1AD8: 3C 00                                 cmp al, 0
[3106]    1ADA: 74 0E                                 je check_row_l_90_1     ; row is not full
[3107]    1ADC: 83 C1 04                              add cx, 4               ; check block of the next row
[3108]    1ADF: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3109]    1AE3: 7E EF                                 jle check_row_l_90_2_
[3110]    1AE5: FF 06 6C 00                           inc full_rows_num
[3111]    1AE9: 52                                    push dx                 ; push start_row+4
[3112]        :                                       
[3113]        :                                       ; check row 1
[3114]    1AEA:                                       check_row_l_90_1:
[3115]    1AEA: 8B 0E 1A 00                           mov cx, srch_str_col
[3116]    1AEE: 8B 16 16 00                           mov dx, start_row
[3117]        :                                       
[3118]    1AF2:                                       check_row_l_90_1_:
[3119]    1AF2: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3120]    1AF4: CD 10                                 int 10h
[3121]    1AF6: 3C 00                                 cmp al, 0
[3122]    1AF8: 75 03 E9 4C 03                        je end_check            ; row is not full
[3123]    1AFD: 83 C1 04                              add cx, 4               ; check block of the next row
[3124]    1B00: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3125]    1B04: 7E EC                                 jle check_row_l_90_1_
[3126]    1B06: FF 06 6C 00                           inc full_rows_num
[3127]    1B0A: FF 36 16 00                           push start_row
[3128]    1B0E: E9 38 03                              jmp end_check
[3129]        :                                       
[3130]    1B11:                                       l_ang_180:
[3131]    1B11: 81 3E 1F 00 B4 00                     cmp curr_ang, 180
[3132]    1B17: 75 69                                 jnz l_ang_270
[3133]        :                                       
[3134]        :                                       ; check row 3
[3135]    1B19:                                       check_row_l_180_3:
[3136]    1B19: 8B 0E 1A 00                           mov cx, srch_str_col
[3137]    1B1D: 8B 16 16 00                           mov dx, start_row
[3138]    1B21: 83 C2 08                              add dx, 8
[3139]        :                                       
[3140]    1B24:                                       check_row_l_180_3_:
[3141]    1B24: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3142]    1B26: CD 10                                 int 10h
[3143]    1B28: 3C 00                                 cmp al, 0
[3144]    1B2A: 74 0E                                 je check_row_l_180_2    ; row is not full
[3145]    1B2C: 83 C1 04                              add cx, 4               ; check block of the next row
[3146]    1B2F: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of borderr
[3147]    1B33: 7E EF                                 jle check_row_l_180_3_
[3148]    1B35: FF 06 6C 00                           inc full_rows_num
[3149]    1B39: 52                                    push dx                 ; push start_row+8
[3150]        :                                       
[3151]        :                                       ; check row 2
[3152]    1B3A:                                       check_row_l_180_2:
[3153]    1B3A: 8B 0E 1A 00                           mov cx, srch_str_col
[3154]    1B3E: 8B 16 16 00                           mov dx, start_row
[3155]    1B42: 83 C2 04                              add dx, 4
[3156]        :                                       
[3157]    1B45:                                       check_row_l_180_2_:
[3158]    1B45: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3159]    1B47: CD 10                                 int 10h
[3160]    1B49: 3C 00                                 cmp al, 0
[3161]    1B4B: 74 0E                                 je check_row_l_180_1    ; row is not full
[3162]    1B4D: 83 C1 04                              add cx, 4               ; check block of the next row
[3163]    1B50: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3164]    1B54: 7E EF                                 jle check_row_l_180_2_
[3165]    1B56: FF 06 6C 00                           inc full_rows_num
[3166]    1B5A: 52                                    push dx                 ; push start_row+4
[3167]        :                                       
[3168]        :                                       ; check row 1
[3169]    1B5B:                                       check_row_l_180_1:
[3170]    1B5B: 8B 0E 1A 00                           mov cx, srch_str_col
[3171]    1B5F: 8B 16 16 00                           mov dx, start_row
[3172]        :                                       
[3173]    1B63:                                       check_row_l_180_1_:
[3174]    1B63: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3175]    1B65: CD 10                                 int 10h
[3176]    1B67: 3C 00                                 cmp al, 0
[3177]    1B69: 75 03 E9 DB 02                        je end_check            ; row is not full
[3178]    1B6E: 83 C1 04                              add cx, 4               ; check block of the next row
[3179]    1B71: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3180]    1B75: 7E EC                                 jle check_row_l_180_1_
[3181]    1B77: FF 06 6C 00                           inc full_rows_num
[3182]    1B7B: FF 36 16 00                           push start_row
[3183]    1B7F: E9 C7 02                              jmp end_check
[3184]        :                                       
[3185]    1B82:                                       l_ang_270:
[3186]        :                                       
[3187]        :                                       ; check row 2
[3188]    1B82:                                       check_row_l_270_2:
[3189]    1B82: 8B 0E 1A 00                           mov cx, srch_str_col
[3190]    1B86: 8B 16 16 00                           mov dx, start_row
[3191]    1B8A: 83 C2 04                              add dx, 4
[3192]        :                                       
[3193]    1B8D:                                       check_row_l_270_2_:
[3194]    1B8D: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3195]    1B8F: CD 10                                 int 10h
[3196]    1B91: 3C 00                                 cmp al, 0
[3197]    1B93: 74 0E                                 je check_row_l_270_1    ; row is not full
[3198]    1B95: 83 C1 04                              add cx, 4               ; check block of the next row
[3199]    1B98: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3200]    1B9C: 7E EF                                 jle check_row_l_270_2_
[3201]    1B9E: FF 06 6C 00                           inc full_rows_num
[3202]    1BA2: 52                                    push dx                 ; push start_row+4
[3203]        :                                       
[3204]        :                                       ; check row 1
[3205]    1BA3:                                       check_row_l_270_1:
[3206]    1BA3: 8B 0E 1A 00                           mov cx, srch_str_col
[3207]    1BA7: 8B 16 16 00                           mov dx, start_row
[3208]        :                                       
[3209]    1BAB:                                       check_row_l_270_1_:
[3210]    1BAB: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3211]    1BAD: CD 10                                 int 10h
[3212]    1BAF: 3C 00                                 cmp al, 0
[3213]    1BB1: 75 03 E9 93 02                        je end_check            ; row is not full
[3214]    1BB6: 83 C1 04                              add cx, 4               ; check block of the next row
[3215]    1BB9: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3216]    1BBD: 7E EC                                 jle check_row_l_270_1_
[3217]    1BBF: FF 06 6C 00                           inc full_rows_num
[3218]    1BC3: FF 36 16 00                           push start_row
[3219]    1BC7: E9 7F 02                              jmp end_check
[3220]        :                                       
[3221]    1BCA:                                       maybe_t:
[3222]    1BCA: 80 3E 1E 00 74                        cmp curr_shape, 't'
[3223]    1BCF: 74 03 E9 73 01                        jnz maybe_z
[3224]        :                                       
[3225]    1BD4: 83 3E 1F 00 00                        cmp curr_ang, 0
[3226]    1BD9: 75 48                                 jnz t_ang_90
[3227]        :                                       
[3228]        :                                       ; check row 2
[3229]    1BDB:                                       check_row_t_2:
[3230]    1BDB: 8B 0E 1A 00                           mov cx, srch_str_col
[3231]    1BDF: 8B 16 16 00                           mov dx, start_row
[3232]    1BE3: 83 C2 04                              add dx, 4
[3233]        :                                       
[3234]    1BE6:                                       check_row_t_2_:
[3235]    1BE6: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3236]    1BE8: CD 10                                 int 10h
[3237]    1BEA: 3C 00                                 cmp al, 0
[3238]    1BEC: 74 0E                                 je check_row_t_1        ; row is not full
[3239]    1BEE: 83 C1 04                              add cx, 4               ; check block of the next row
[3240]    1BF1: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3241]    1BF5: 7E EF                                 jle check_row_t_2_
[3242]    1BF7: FF 06 6C 00                           inc full_rows_num
[3243]    1BFB: 52                                    push dx                 ; push start_row+4
[3244]        :                                       
[3245]        :                                       ; check row 1
[3246]    1BFC:                                       check_row_t_1:
[3247]    1BFC: 8B 0E 1A 00                           mov cx, srch_str_col
[3248]    1C00: 8B 16 16 00                           mov dx, start_row
[3249]        :                                       
[3250]    1C04:                                       check_row_t_1_:
[3251]    1C04: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3252]    1C06: CD 10                                 int 10h
[3253]    1C08: 3C 00                                 cmp al, 0
[3254]    1C0A: 75 03 E9 3A 02                        je end_check            ; row is not full
[3255]    1C0F: 83 C1 04                              add cx, 4               ; check block of the next row
[3256]    1C12: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3257]    1C16: 7E EC                                 jle check_row_t_1_
[3258]    1C18: FF 06 6C 00                           inc full_rows_num
[3259]    1C1C: FF 36 16 00                           push start_row
[3260]    1C20: E9 26 02                              jmp end_check
[3261]        :                                       
[3262]    1C23:                                       t_ang_90:
[3263]    1C23: 75 69                                 jnz t_ang_180
[3264]        :                                       
[3265]        :                                       ; check row 3
[3266]    1C25:                                       check_row_t_90_3:
[3267]    1C25: 8B 0E 1A 00                           mov cx, srch_str_col
[3268]    1C29: 8B 16 16 00                           mov dx, start_row
[3269]    1C2D: 83 C2 08                              add dx, 8
[3270]        :                                       
[3271]    1C30:                                       check_row_t_90_3_:
[3272]    1C30: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3273]    1C32: CD 10                                 int 10h
[3274]    1C34: 3C 00                                 cmp al, 0
[3275]    1C36: 74 0E                                 je check_row_t_90_2     ; row is not full
[3276]    1C38: 83 C1 04                              add cx, 4               ; check block of the next row
[3277]    1C3B: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3278]    1C3F: 7E EF                                 jle check_row_t_90_3_
[3279]    1C41: FF 06 6C 00                           inc full_rows_num
[3280]    1C45: 52                                    push dx
[3281]        :                                       
[3282]        :                                       ; check row 2
[3283]    1C46:                                       check_row_t_90_2:
[3284]    1C46: 8B 0E 1A 00                           mov cx, srch_str_col
[3285]    1C4A: 8B 16 16 00                           mov dx, start_row
[3286]    1C4E: 83 C2 04                              add dx, 4
[3287]        :                                       
[3288]    1C51:                                       check_row_t_90_2_:
[3289]    1C51: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3290]    1C53: CD 10                                 int 10h
[3291]    1C55: 3C 00                                 cmp al, 0
[3292]    1C57: 74 0E                                 je check_row_t_90_1     ; row is not full
[3293]    1C59: 83 C1 04                              add cx, 4               ; check block of the next row
[3294]    1C5C: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3295]    1C60: 7E EF                                 jle check_row_t_90_2_
[3296]    1C62: FF 06 6C 00                           inc full_rows_num
[3297]    1C66: 52                                    push dx
[3298]        :                                       
[3299]        :                                       ; check row 1
[3300]    1C67:                                       check_row_t_90_1:
[3301]    1C67: 8B 0E 1A 00                           mov cx, srch_str_col
[3302]    1C6B: 8B 16 16 00                           mov dx, start_row
[3303]        :                                       
[3304]    1C6F:                                       check_row_t_90_1_:
[3305]    1C6F: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3306]    1C71: CD 10                                 int 10h
[3307]    1C73: 3C 00                                 cmp al, 0
[3308]    1C75: 75 03 E9 CF 01                        je end_check                ; row is not full
[3309]    1C7A: 83 C1 04                              add cx, 4                   ; check block of the next row
[3310]    1C7D: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3311]    1C81: 7E EC                                 jle check_row_t_90_1_
[3312]    1C83: FF 06 6C 00                           inc full_rows_num
[3313]    1C87: FF 36 16 00                           push start_row
[3314]    1C8B: E9 BB 01                              jmp end_check
[3315]        :                                       
[3316]    1C8E:                                       t_ang_180:
[3317]    1C8E: 81 3E 1F 00 B4 00                     cmp curr_ang, 180
[3318]    1C94: 75 48                                 jnz t_ang_270
[3319]        :                                       
[3320]    1C96:                                       check_row_t_180_2:
[3321]    1C96: 8B 0E 1A 00                           mov cx, srch_str_col
[3322]    1C9A: 8B 16 16 00                           mov dx, start_row
[3323]    1C9E: 83 C2 04                              add dx, 4
[3324]        :                                       
[3325]    1CA1:                                       check_row_t_180_2_:
[3326]    1CA1: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3327]    1CA3: CD 10                                 int 10h
[3328]    1CA5: 3C 00                                 cmp al, 0
[3329]    1CA7: 74 0E                                 je check_row_t_180_1    ; row is not full
[3330]    1CA9: 83 C1 04                              add cx, 4               ; check block of the next row
[3331]    1CAC: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3332]    1CB0: 7E EF                                 jle check_row_t_180_2_
[3333]    1CB2: FF 06 6C 00                           inc full_rows_num
[3334]    1CB6: 52                                    push dx                 ; push start_row+4
[3335]        :                                       
[3336]    1CB7:                                       check_row_t_180_1:
[3337]    1CB7: 8B 0E 1A 00                           mov cx, srch_str_col
[3338]    1CBB: 8B 16 16 00                           mov dx, start_row
[3339]        :                                       
[3340]    1CBF:                                       check_row_t_180_1_:
[3341]    1CBF: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3342]    1CC1: CD 10                                 int 10h
[3343]    1CC3: 3C 00                                 cmp al, 0
[3344]    1CC5: 75 03 E9 7F 01                        je end_check            ; row is not full
[3345]    1CCA: 83 C1 04                              add cx, 4               ; check block of the next row
[3346]    1CCD: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3347]    1CD1: 7E EC                                 jle check_row_t_180_1_
[3348]    1CD3: FF 06 6C 00                           inc full_rows_num
[3349]    1CD7: FF 36 16 00                           push start_row
[3350]    1CDB: E9 6B 01                              jmp end_check
[3351]        :                                       
[3352]    1CDE:                                       t_ang_270:
[3353]        :                                       
[3354]    1CDE:                                       check_row_t_270_3:
[3355]    1CDE: 8B 0E 1A 00                           mov cx, srch_str_col
[3356]    1CE2: 8B 16 16 00                           mov dx, start_row
[3357]    1CE6: 83 C2 08                              add dx, 8
[3358]        :                                       
[3359]    1CE9:                                       check_row_t_270_3_:
[3360]    1CE9: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3361]    1CEB: CD 10                                 int 10h
[3362]    1CED: 3C 00                                 cmp al, 0
[3363]    1CEF: 74 0E                                 je check_row_t_270_2    ; row is not full
[3364]    1CF1: 83 C1 04                              add cx, 4               ; check block of the next row
[3365]    1CF4: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3366]    1CF8: 7E EF                                 jle check_row_t_270_3_
[3367]    1CFA: FF 06 6C 00                           inc full_rows_num
[3368]    1CFE: 52                                    push dx
[3369]        :                                       
[3370]    1CFF:                                       check_row_t_270_2:
[3371]    1CFF: 8B 0E 1A 00                           mov cx, srch_str_col
[3372]    1D03: 8B 16 16 00                           mov dx, start_row
[3373]    1D07: 83 C2 04                              add dx, 4
[3374]        :                                       
[3375]    1D0A:                                       check_row_t_270_2_:
[3376]    1D0A: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3377]    1D0C: CD 10                                 int 10h
[3378]    1D0E: 3C 00                                 cmp al, 0
[3379]    1D10: 74 0E                                 je check_row_t_270_1    ; row is not full
[3380]    1D12: 83 C1 04                              add cx, 4               ; check block of the next row
[3381]    1D15: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3382]    1D19: 7E EF                                 jle check_row_t_270_2_
[3383]    1D1B: FF 06 6C 00                           inc full_rows_num
[3384]    1D1F: 52                                    push dx
[3385]        :                                       
[3386]    1D20:                                       check_row_t_270_1:
[3387]    1D20: 8B 0E 1A 00                           mov cx, srch_str_col
[3388]    1D24: 8B 16 16 00                           mov dx, start_row
[3389]        :                                       
[3390]    1D28:                                       check_row_t_270_1_:
[3391]    1D28: B4 0D                                 mov ah, 0Dh             ; get color of the block
[3392]    1D2A: CD 10                                 int 10h
[3393]    1D2C: 3C 00                                 cmp al, 0
[3394]    1D2E: 75 03 E9 16 01                        je end_check            ; row is not full
[3395]    1D33: 83 C1 04                              add cx, 4               ; check block of the next row
[3396]    1D36: 3B 0E 1C 00                           cmp cx, srch_end_col    ; end of border
[3397]    1D3A: 7E EC                                 jle check_row_t_270_1_
[3398]    1D3C: FF 06 6C 00                           inc full_rows_num
[3399]    1D40: FF 36 16 00                           push start_row
[3400]    1D44: E9 02 01                              jmp end_check
[3401]        :                                       
[3402]    1D47:                                       maybe_z:
[3403]    1D47: 80 3E 1E 00 7A                        cmp curr_shape, 'z'
[3404]    1D4C: 74 03 E9 B4 00                        jnz is_s
[3405]        :                                       
[3406]    1D51: 83 3E 1F 00 00                        cmp curr_ang, 0
[3407]    1D56: 75 48                                 jnz z_ang_90
[3408]        :                                       
[3409]    1D58:                                       check_row_z_2:
[3410]    1D58: 8B 0E 1A 00                           mov cx, srch_str_col
[3411]    1D5C: 8B 16 16 00                           mov dx, start_row
[3412]    1D60: 83 C2 04                              add dx, 4
[3413]        :                                       
[3414]    1D63:                                       check_row_z_2_:
[3415]    1D63: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3416]    1D65: CD 10                                 int 10h
[3417]    1D67: 3C 00                                 cmp al, 0
[3418]    1D69: 74 0E                                 je check_row_z_1            ; row is not full
[3419]    1D6B: 83 C1 04                              add cx, 4                   ; check block of the next row
[3420]    1D6E: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3421]    1D72: 7E EF                                 jle check_row_z_2_
[3422]    1D74: FF 06 6C 00                           inc full_rows_num
[3423]    1D78: 52                                    push dx
[3424]        :                                       
[3425]    1D79:                                       check_row_z_1:
[3426]    1D79: 8B 0E 1A 00                           mov cx, srch_str_col
[3427]    1D7D: 8B 16 16 00                           mov dx, start_row
[3428]        :                                       
[3429]    1D81:                                       check_row_z_1_:
[3430]    1D81: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3431]    1D83: CD 10                                 int 10h
[3432]    1D85: 3C 00                                 cmp al, 0
[3433]    1D87: 75 03 E9 BD 00                        je end_check           		; row is not full
[3434]    1D8C: 83 C1 04                              add cx, 4                   ; check block of the next row
[3435]    1D8F: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3436]    1D93: 7E EC                                 jle check_row_z_1_
[3437]    1D95: FF 06 6C 00                           inc full_rows_num
[3438]    1D99: FF 36 16 00                           push start_row
[3439]    1D9D: E9 A9 00                              jmp end_check
[3440]        :                                       
[3441]    1DA0:                                       z_ang_90:
[3442]        :                                       
[3443]    1DA0:                                       check_row_z_90_3:
[3444]    1DA0: 8B 0E 1A 00                           mov cx, srch_str_col
[3445]    1DA4: 8B 16 16 00                           mov dx, start_row
[3446]    1DA8: 83 C2 08                              add dx, 8
[3447]        :                                       
[3448]    1DAB:                                       check_row_z_90_3_:
[3449]    1DAB: B4 0D                                 mov ah,0Dh                  ; get color of the block
[3450]    1DAD: CD 10                                 int 10h
[3451]    1DAF: 3C 00                                 cmp al,0
[3452]    1DB1: 74 0E                                 je check_row_z_90_2         ; row is not full
[3453]    1DB3: 83 C1 04                              add cx, 4                   ; check block of the next row
[3454]    1DB6: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3455]    1DBA: 7E EF                                 jle check_row_z_90_3_
[3456]    1DBC: FF 06 6C 00                           inc full_rows_num
[3457]    1DC0: 52                                    push dx
[3458]        :                                       
[3459]    1DC1:                                       check_row_z_90_2:
[3460]    1DC1: 8B 0E 1A 00                           mov cx, srch_str_col
[3461]    1DC5: 8B 16 16 00                           mov dx, start_row
[3462]    1DC9: 83 C2 04                              add dx, 4
[3463]        :                                       
[3464]    1DCC:                                       check_row_z_90_2_:
[3465]    1DCC: B4 0D                                 mov ah,0Dh                  ; get color of the block
[3466]    1DCE: CD 10                                 int 10h
[3467]    1DD0: 3C 00                                 cmp al,0
[3468]    1DD2: 74 0E                                 je check_row_z_90_1         ; row is not full
[3469]    1DD4: 83 C1 04                              add cx, 4                   ; check block of the next row
[3470]    1DD7: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3471]    1DDB: 7E EF                                 jle check_row_z_90_2_
[3472]    1DDD: FF 06 6C 00                           inc full_rows_num
[3473]    1DE1: 52                                    push dx
[3474]        :                                       
[3475]    1DE2:                                       check_row_z_90_1:
[3476]    1DE2: 8B 0E 1A 00                           mov cx, srch_str_col
[3477]    1DE6: 8B 16 16 00                           mov dx, start_row
[3478]        :                                       
[3479]    1DEA:                                       check_row_z_90_1_:
[3480]    1DEA: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3481]    1DEC: CD 10                                 int 10h
[3482]    1DEE: 3C 00                                 cmp al, 0
[3483]    1DF0: 74 57                                 je end_check         		; row is not full
[3484]    1DF2: 83 C1 04                              add cx, 4                   ; check block of the next row
[3485]    1DF5: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3486]    1DF9: 7E EF                                 jle check_row_z_90_1_
[3487]    1DFB: FF 06 6C 00                           inc full_rows_num
[3488]    1DFF: FF 36 16 00                           push start_row
[3489]    1E03: EB 44                                 jmp end_check
[3490]        :                                       
[3491]    1E05:                                       is_s:
[3492]    1E05:                                       check_row_s_2:
[3493]    1E05: 8B 0E 1A 00                           mov cx, srch_str_col
[3494]    1E09: 8B 16 16 00                           mov dx, start_row
[3495]    1E0D: 83 C2 04                              add dx, 4
[3496]        :                                       
[3497]    1E10:                                       check_row_s_2_:
[3498]    1E10: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3499]    1E12: CD 10                                 int 10h
[3500]    1E14: 3C 00                                 cmp al, 0
[3501]    1E16: 74 0E                                 je check_row_s_1            ; row is not full
[3502]    1E18: 83 C1 04                              add cx, 4                   ; check block of the next row
[3503]    1E1B: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3504]    1E1F: 7E EF                                 jle check_row_s_2_
[3505]    1E21: FF 06 6C 00                           inc full_rows_num
[3506]    1E25: 52                                    push dx
[3507]        :                                       
[3508]    1E26:                                       check_row_s_1:
[3509]    1E26: 8B 0E 1A 00                           mov cx, srch_str_col
[3510]    1E2A: 8B 16 16 00                           mov dx, start_row
[3511]    1E2E:                                       check_row_s_1_:
[3512]    1E2E: B4 0D                                 mov ah, 0Dh                 ; get color of the block
[3513]    1E30: CD 10                                 int 10h
[3514]    1E32: 3C 00                                 cmp al, 0
[3515]    1E34: 74 13                                 je end_check            	; row is not full
[3516]    1E36: 83 C1 04                              add cx, 4                   ; check block of the next row
[3517]    1E39: 3B 0E 1C 00                           cmp cx, srch_end_col        ; end of border
[3518]    1E3D: 7E EF                                 jle check_row_s_1_
[3519]    1E3F: FF 06 6C 00                           inc full_rows_num
[3520]    1E43: FF 36 16 00                           push start_row
[3521]    1E47: EB 00                                 jmp end_check
[3522]        :                                       
[3523]    1E49:                                       end_check:
[3524]    1E49: 8B 1E 6C 00                           mov bx,full_rows_num
[3525]    1E4D: 83 FB 02                              cmp bx,2
[3526]    1E50: 7D 0F                                 jge x2
[3527]        :                                       
[3528]    1E52:                                       plus:
[3529]    1E52: 8B C3                                 mov ax, bx
[3530]    1E54: F7 26 70 00                           mul ten
[3531]    1E58: 01 06 69 00                           add score, ax ; update score
[3532]    1E5C: E8 98 E3                              call show_score
[3533]    1E5F: EB 09                                 jmp base_check
[3534]        :                                       
[3535]    1E61:                                       x2:
[3536]    1E61: B8 02 00                              mov ax, 2
[3537]    1E64: F7 E3                                 mul bx
[3538]    1E66: 8B D8                                 mov bx, ax
[3539]    1E68: EB E8                                 jmp plus
[3540]        :                                       
[3541]        :                                       ; shift rows down
[3542]    1E6A:                                       base_check:
[3543]    1E6A: 83 3E 6C 00 00                        cmp full_rows_num,0
[3544]    1E6F: 74 3A                                 je done_shift
[3545]        :                                       
[3546]    1E71: 8F 06 6E 00                           pop curr_row    ; row that shoud be shifted
[3547]        :                                       
[3548]    1E75:                                       next_row:
[3549]    1E75: 8B 1E 1A 00                           mov bx, srch_str_col
[3550]        :                                       
[3551]    1E79:                                       continue_color:
[3552]        :                                       ; get color of the above row
[3553]    1E79: 8B 16 6E 00                           mov dx, curr_row
[3554]    1E7D: 83 EA 04                              sub dx, 4       ; upper row
[3555]    1E80: 8B CB                                 mov cx, bx      ; srch_str_col
[3556]    1E82: B4 0D                                 mov ah,0Dh      ; get color of the block
[3557]    1E84: CD 10                                 int 10h         ; now color (al) is set with upper block
[3558]        :                                       
[3559]        :                                       ; color bottom row
[3560]    1E86: 8B 16 6E 00                           mov dx, curr_row
[3561]    1E8A: E8 CF E4                              call draw_tile
[3562]        :                                       
[3563]        :                                       ;go next col
[3564]    1E8D: 83 C3 04                              add bx, 4
[3565]    1E90: 3B 1E 1C 00                           cmp bx, srch_end_col
[3566]    1E94: 7E E3                                 jle continue_color
[3567]        :                                       
[3568]        :                                       ;go next row
[3569]    1E96: 83 2E 6E 00 04                        sub curr_row, 4
[3570]    1E9B: 8B 1E 6E 00                           mov bx, curr_row
[3571]    1E9F: 3B 1E 04 00                           cmp bx, brd_ur
[3572]    1EA3: 75 D0                                 jnz next_row
[3573]        :                                       
[3574]    1EA5: FF 0E 6C 00                           dec full_rows_num
[3575]    1EA9: EB BF                                 jmp base_check
[3576]        :                                       
[3577]    1EAB:                                       done_shift:
[3578]    1EAB: C3                                    ret
[3579]        :                                       check_full endp
[3580]        :                                       
[3581]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: AC      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 11      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 40      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 48      -   check sum (l.byte)
0013: A6      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 0C      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 0C      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
